{"version":3,"sources":["styles/Buttons.module.css","styles/StartGameModal.module.css","styles/AnswerInformer.module.css","styles/MatchingRound.module.css","styles/TextBox.module.css","styles/Modal.module.css","styles/Navbar.module.css","components/pages/HomePage.js","components/TextBox.js","components/assets/TimeBox.js","components/ScoreBoard.js","components/AnswerInformer.js","components/classes/Parser.js","components/assets/buttons.js","components/MatchingRound.js","components/assets/Modal.js","components/EndGameModal.js","components/GameLang.js","components/GameText.js","components/assets/SiteNavBar.js","components/StartGameModal.js","components/MatchingGame.js","components/Crossword.js","components/classes/xword.js","components/CrosswordGenerator.js","components/pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","props","state","className","Component","TextBox","classes","hebrew","textHebrew","english","textEnglish","both","lang","TimeBox","count","timerInterval","this","startCountDown","prevProps","prevState","snapshot","round","setState","clue","clearInterval","timeInterval","interval","setInterval","resetClue","bind","style","display","marginLeft","ScoreBoard","score","AnswerInformer","answer","correct","Correct","Incorrect","points","addedPoints","Parser","textArr","map","x","replace","BtnConfig","Btn","Config","onClick","setConfig","response","children","BtnBig","Big","BtnAnswer","Answer","resetRoundHandler","answerHebrew","answerEnglish","BtnSmall","Small","P","MatchingRound","userTexts","selectRandomTexts","TextChapters","text","console","log","updateScoreHandler","correctAnswer","textInfos","textNameEnglish","answeredCorrectly","answerInform","correctAnswerShow","getTextInfo","getLabels","timer","labels","textInfoArray","copyInfoArray","singleTextInfoArray","i","length","push","Promise","all","textName","subtextNumber","chooseRandomSubtext","fetch","then","json","data","cleanText","vn","chooseRandomVerse","TextInfo","indexTitle","heTitle","he","values","Label","heIndexTitle","shuffleArray","num","texts","Object","keys","copyArr","newUserTexts","index","Math","floor","random","splice","textDict","ceil","daf","toString","str","hash","charCodeAt","array","j","textCompArray","labelCompArray","nextClue","filter","key","label","textNameHebrew","GameDesk","TextRow","tanakh","Genesis","Exodus","Leviticus","Numbers","Deuteronomy","Joshua","Judges","I_Samuel","II_Samuel","I_Kings","II_Kings","Isaiah","Jeremiah","Ezekiel","Hosea","Joel","Amos","Obadiah","Jonah","Micah","Nahum","Habakkuk","Zephaniah","Haggai","Zechariah","Malachi","Psalms","Proverbs","Job","Song_of_Songs","Ruth","Lamentations","Ecclesiastes","Esther","Daniel","Ezra","Nehemiah","I_Chronicles","II_Chronicles","mishnah","Mishnah_Berakhot","Mishnah_Peah","Mishnah_Demai","Mishnah_Kilayim","Mishnah_Sheviit","Mishnah_Terumot","Mishnah_Maasrot","Mishnah_Maaser_Sheni","Mishnah_Challah","Mishnah_Orlah","Mishnah_Bikkurim","Mishnah_Shabbat","Mishnah_Eruvin","Mishnah_Pesachim","Mishnah_Shekalim","Mishnah_Yoma","Mishnah_Sukkah","Mishnah_Beitzah","Mishnah_Rosh_Hashanah","Mishnah_Taanit","Mishnah_Megillah","Mishnah_Moed_Katan","Mishnah_Chagigah","Mishnah_Yevamot","Mishnah_Ketubot","Mishnah_Nedarim","Mishnah_Nazir","Mishnah_Sotah","Mishnah_Gittin","Mishnah_Kiddushin","Mishnah_Bava_Kamma","Mishnah_Bava_Metzia","Mishnah_Bava_Batra","Mishnah_Sanhedrin","Mishnah_Makkot","Mishnah_Shevuot","Mishnah_Eduyot","Mishnah_Avodah_Zarah","Mishnah_Avot","Mishnah_Horayot","Mishnah_Zevachim","Mishnah_Menachot","Mishnah_Chullin","Mishnah_Bekhorot","Mishnah_Arakhin","Mishnah_Temurah","Mishnah_Keritot","Mishnah_Meilah","Mishnah_Tamid","Mishnah_Middot","Mishnah_Kinnim","Mishnah_Kelim","Mishnah_Oholot","Mishnah_Negaim","Mishnah_Parah","Mishnah_Tahorot","Mishnah_Mikvaot","Mishnah_Niddah","Mishnah_Makhshirin","Mishnah_Zavim","Mishnah_Tevul_Yom","Mishnah_Yadayim","Mishnah_Oktzin","talmud","Berakhot","Shabbat","Eruvin","Pesachim","Rosh_Hashanah","Yoma","Sukkah","Beitzah","Taanit","Megillah","Moed_Katan","Chagigah","Yevamot","Ketubot","Nedarim","Nazir","Sotah","Gittin","Kiddushin","Bava_Kamma","Bava_Metzia","Bava_Batra","Sanhedrin","Makkot","Shevuot","Avodah_Zarah","Horayot","Zevachim","Menachot","Chullin","Bekhorot","Arakhin","Temurah","Keritot","Meilah","Tamid","Niddah","Modal","EndGameModal","reStartGame","GameLang","Instructions","setLang","GameText","setText","Navbar","NavbarOuter","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","StartGameModal","startGame","MatchingGame","rounds","gameOver","gameStarted","gameLang","gameText","currentDisplay","Crossword","activeClueBoxes","activeClue","boxInFocus","setActiveClueBoxes","setActiveClue","setBoxInFocus","clues","boxes","box","grid","allClues","highlightedBoxes","dimensions","Clues","across","down","cluesAcross","cluesDown","direction","clueData","clueID","clueText","clueNumber","number","clueBoxes","clueDir","isActive","indexOf","Clue","active","handleClick","Board","isBoxFilled","find","letter","boxMatrix","boxClues","isHighlighted","row","Box","highlight","isInFocus","handleFocus","uniKeyCode","uniKeyUp","textInput","focus","event","includes","boxesToHighlight","concat","keyCode","y","parseInt","charAt","String","fromCharCode","visibleLabel","input","type","maxLength","onFocus","onKeyDown","onKeyUp","ref","xWords","HORIZONTAL","VERTICAL","MAX_PASSES","MAX_RUNTIME","CENTER_FIRST","UNSET","_self","Grid","Array","QuestionGrid","Words","QuestionList","bestFit","sErrors","SetLang","Reset","ResetComplete","GetNumberOfWordGroups","iReturn","orphaned","GetUnusedWords","unusedArray","chosenPosition","word","GetQuestionGrid","GetQuestionList","Create","height","width","arrayOfWords","time2","time1","Date","getTime","trim","Word","SortByLength","posIndex","AddWord","GenerateQuestionGrid","WordGroupsCount","AlternativeGrid","slice","counter","crossingPositions","tmpObj","d","availablePositions","SortXwordQuestions","k","lArray","sort","a","b","bReturn","newWord","callNumber","passNumber","GetPositions","newPos","choice","horWord","split","reverse","join","undefined","TestPosition","crossingPoint","CharBeforeFirstLetter","CharAfterLastLetter","AnotherWordOnThisLine","SidesHaveChars","Position","len","z","txt","pos","substr","ResetArrays","words","qGrid","qList","groupCount","CLUE_LIST","WORD_LIST","CrosswordGenerator","structure_Grid_Data","Grid_Data","labelCount","currentLabel","labelOffset","gridMatrix","forEach","xComponent","yComponent","data_to_change","dirComponent","clueList","dirKey","Clue_Data","AboutPage","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.37201c72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Buttons_Btn__3XVRn\",\"Answer\":\"Buttons_Answer__1EVei\",\"Big\":\"Buttons_Big__fkn6u\",\"Config\":\"Buttons_Config__3mHAv\",\"Small\":\"Buttons_Small__1hVra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Instructions\":\"StartGameModal_Instructions__1q0iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerInformer\":\"AnswerInformer_AnswerInformer__7VDLQ\",\"Correct\":\"AnswerInformer_Correct__1opd-\",\"Incorrect\":\"AnswerInformer_Incorrect__9ENrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameDesk\":\"MatchingRound_GameDesk__2iByN\",\"TextRow\":\"MatchingRound_TextRow__2BVuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextBox\":\"TextBox_TextBox__3Hmb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__27sKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarOuter\":\"Navbar_NavbarOuter__2QxoC\"};","import React, {Component} from 'react';\r\n\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <h2>HomePage</h2>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport classes from '../styles/TextBox.module.css';\r\n\r\n\r\nconst TextBox = (props) => {\r\n\r\n    return (\r\n        <div className={'col-12 ' + classes.TextBox}>\r\n            {\r\n                {hebrew: <p>{props.textHebrew}</p>,\r\n                english: <p>{props.textEnglish}</p>,\r\n                both: <div><p>{props.textHebrew}</p><p>{props.textEnglish}</p></div>,\r\n                }[props.lang]\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default TextBox;","import React, {Component} from 'react';\r\n\r\n\r\nexport default class TimeBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 20,\r\n            timerInterval: '',\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startCountDown()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps != this.props) {\r\n            if (this.props.round != prevProps.round) {\r\n                this.setState({\r\n                    count: 20 - ((this.props.clue - 1) * 5)\r\n                })\r\n                clearInterval(this.state.timeInterval);\r\n                this.startCountDown();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    startCountDown(){\r\n\r\n        let interval = setInterval(function () {\r\n                    this.setState({count: this.state.count - 1}, ()=> {\r\n                        if(this.state.count <= 0){\r\n                            this.props.resetClue();\r\n                            this.setState({\r\n                                count: 10\r\n                            })\r\n                            clearInterval(this.state.timeInterval);\r\n                            this.startCountDown();\r\n                        }\r\n                    });\r\n\r\n        }.bind(this), 1000);\r\n\r\n        this.setState({\r\n            timeInterval: interval\r\n        })\r\n    }\r\n\r\n    // timer(){\r\n    //     this.setState({count: this.state.count + 1});\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='col-12'>\r\n                <h2 style={{display: 'inline-block'}}>Round: {this.props.round}  </h2>\r\n                <h2 style={{display: 'inline-block', marginLeft:'20px'}}>Time for Clue: {this.state.count}</h2>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ScoreBoard = (props) => {\r\n    return(\r\n        <div style={{display: 'inline'}}>\r\n            <h2>Score: {props.score}</h2>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ScoreBoard;","import React from 'react';\r\nimport classes from '../styles/AnswerInformer.module.css';\r\n\r\nconst AnswerInformer = (props) => {\r\n    let answer = <p>Correct Answer:  {props.answer}</p>;\r\n    let correct = <p className={props.correct ? classes.Correct : classes.Incorrect}> {props.correct ? 'Correct!' : 'Incorrect'}</p>;\r\n    let points = <p>+{props.addedPoints}  </p>\r\n    return(\r\n        <div className={classes.AnswerInformer}>\r\n            {correct}\r\n            {props.correct ? points : answer}\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AnswerInformer;","\r\n\r\n\r\n\r\nexport default class Parser {\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    cleanText(textArr){\r\n        return textArr.map(x => x.replace(/<[^>]*>/g,\"\"));\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport classes from '../../styles/Buttons.module.css';\r\n\r\n\r\nexport const BtnConfig = (props) => {\r\n\r\n    return (\r\n        <button className={'col-sm ' + classes.Btn + ' ' + classes.Config} onClick={() => props.setConfig(props.response)}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnBig = (props) => {\r\n\r\n    return (\r\n            <button className={classes.Btn + ' ' + classes.Big} onClick={props.onClick}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnAnswer= (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Answer} onClick={() => props.resetRoundHandler((props.correct ? (4 - props.clue) * 100 : 0), props.correct)} >\r\n                <p>{props.answerHebrew}</p>\r\n                <p>{props.answerEnglish}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const BtnSmall = (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Small} onClick={props.onClick} >\r\n                <p>{props.children}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport TextBox from './TextBox';\r\nimport TimeBox from './assets/TimeBox';\r\nimport ScoreBoard from './ScoreBoard'\r\nimport AnswerInformer from './AnswerInformer';\r\nimport classes from '../styles/MatchingRound.module.css'\r\nimport Parser from \"./classes/Parser\";\r\nimport {BtnAnswer, BtnSmall} from \"./assets/buttons\";\r\n\r\nconst P = new Parser();\r\n\r\n\r\nexport default class MatchingRound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let userTexts = this.selectRandomTexts(3, TextChapters[this.props.text]);\r\n        this.state = {\r\n            userTexts: userTexts,\r\n            textInfos: [],\r\n            labels: [],\r\n            round: 0,\r\n            clue: 1,\r\n            answerInform: false,\r\n            answeredCorrectly: false,\r\n            correctAnswer: '',\r\n            addedPoints: 0,\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getTextInfo(this.state.userTexts);\r\n        this.getLabels(this.state.userTexts);\r\n    }\r\n\r\n\r\n    getTextInfo(textInfoArray) {\r\n        let copyInfoArray = [...textInfoArray];\r\n        let singleTextInfoArray = [];\r\n        let correctAnswer = copyInfoArray[0];\r\n        for (let i = 0; i < copyInfoArray.length; i++) {\r\n            singleTextInfoArray.push(correctAnswer);\r\n        }\r\n        Promise.all(singleTextInfoArray.map(textName => {\r\n            let subtextNumber = this.chooseRandomSubtext(textName,TextChapters[this.props.text]);\r\n            console.log(textName + ' . ' + subtextNumber);\r\n            let fetchString = 'http://www.sefaria.org/api/texts/' + textName + '.' + subtextNumber;\r\n            return fetch(fetchString)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    data['text'] = P.cleanText(data.text);\r\n                    let vn = this.chooseRandomVerse(data.text);\r\n                    return(new TextInfo(data.indexTitle, data.heTitle, data.he[vn], data.text[vn]));\r\n                });\r\n        })).then(values => {\r\n            console.log(\"Text Values\");\r\n            console.log(values);\r\n            this.setState({\r\n                textInfos : values,\r\n                count: this.state.count + 3\r\n            }, ()=> console.log(\"finished changes texts\"));\r\n        })\r\n    }\r\n\r\n\r\n    getLabels(textInfoArray){\r\n        let copyInfoArray = [...textInfoArray];\r\n        let labels = [];\r\n        Promise.all(copyInfoArray.map(textName => {\r\n            let fetchString = 'http://www.sefaria.org/api/texts/' + textName;\r\n            return fetch(fetchString)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    data['text'] = P.cleanText(data.text);\r\n                    // console.log(data);\r\n                    let correct = (textName == copyInfoArray[0]);\r\n                    return (new Label(data.indexTitle.replace(/Mishnah/, ''),data.heIndexTitle.replace('משנה' ,''), correct));\r\n                });\r\n        })).then(values => {\r\n            console.log(\"Label values\");\r\n            console.log(values);\r\n            this.shuffleArray(values)\r\n            this.setState({\r\n                labels : values\r\n            }, ()=> console.log(\"finished changes labels\"));\r\n        });\r\n    }\r\n\r\n    selectRandomTexts(num, textArr){\r\n        let texts = Object.keys(textArr);\r\n        let copyArr = [...texts]\r\n        let newUserTexts = [];\r\n        for (let i = 0; i < num; i++) {\r\n            let index = Math.floor(Math.random() * copyArr.length);\r\n            newUserTexts.push(copyArr[index]);\r\n            copyArr.splice(index,1)\r\n        }\r\n        console.log(\"Pre-Selected \" + newUserTexts);\r\n        return newUserTexts;\r\n    }\r\n\r\n    resetRoundHandler = (score,correct) =>{\r\n        //window.alert(\"hi\");\r\n        this.userTexts = this.selectRandomTexts(3, TextChapters[this.props.text]);\r\n        console.log(\"After Click \" + this.userTexts);\r\n        this.props.updateScoreHandler(score);\r\n        let correctAnswer = this.state.textInfos[0].textNameEnglish;\r\n        this.setState({\r\n            userTexts : this.userTexts,\r\n            clue: 1,\r\n            answeredCorrectly: correct,\r\n            answerInform : true,\r\n            correctAnswer: correctAnswer,\r\n            addedPoints: score\r\n        }, () => {\r\n            console.log(\"Post Click state\" + this.state.userTexts);\r\n            this.correctAnswerShow();\r\n            this.getTextInfo(this.state.userTexts);\r\n            this.getLabels(this.state.userTexts);\r\n        });\r\n    }\r\n\r\n    correctAnswerShow = () =>{\r\n\r\n        let timer = setInterval( () => {\r\n            this.setState({\r\n                answerInform : false,\r\n                round : this.state.round + 1,\r\n            });\r\n            clearInterval(timer);\r\n        },1500)\r\n\r\n    }\r\n\r\n    resetClue = () =>{\r\n        if(this.state.clue == 3){\r\n            this.resetRoundHandler(0, false);\r\n        }\r\n        else{\r\n            this.setState({\r\n                clue : this.state.clue + 1\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    chooseRandomSubtext(textName, textDict){\r\n         let num = Math.ceil(Math.random() * textDict[textName]);\r\n         if(textDict[0] == 'Berakhot' && textDict[textDict[0]] == 64){\r\n             if(num == 1){\r\n                 num = 2;\r\n                 let daf = Math.round(Math.random())\r\n                 return num.toString() (daf == 0 ? 'a':'b');\r\n             }\r\n             num = num -1;\r\n             let daf = Math.round(Math.random());\r\n             return num.toString() + (daf == 0 ? 'a':'b');\r\n         }\r\n        // console.log('num=' + num );\r\n        return num;\r\n    }\r\n\r\n    chooseRandomVerse(textArr){\r\n        return Math.floor(Math.random() * textArr.length);\r\n    }\r\n\r\n    hashcode (str) {\r\n        var hash = 0, i, chr;\r\n        for (i = 0; i < str.length; i++) {\r\n            chr   = str.charCodeAt(i);\r\n            hash  = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n\r\nrender(){\r\n         console.log(\"render round\");\r\n\r\n        console.log(this.state.labels);\r\n\r\n        let textCompArray = [];\r\n        let labelCompArray = [];\r\n        let nextClue = '';\r\n        if(this.state.textInfos.length > 0) {\r\n            textCompArray = this.state.textInfos.filter((text,i) => {\r\n                if (i <= (this.state.clue - 1)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }).map((text, i) => {\r\n                //console.log(\"text \" + i + \" \" + text.textNameEnglish);\r\n            return (<TextBox key={i + (this.state.textInfos.length * this.props.round)} lang={this.props.lang} textEnglish={text.textEnglish}\r\n                                                                           textHebrew={text.textHebrew}/>)});\r\n            labelCompArray = this.state.labels.map((label, i) => {\r\n               // console.log(\"label \" + i + \" \" + label.textNameEnglish);\r\n                return(<BtnAnswer key={i + (this.state.textInfos.length * this.props.round)} answerEnglish={label.textNameEnglish}\r\n                                                                           answerHebrew={label.textNameHebrew}\r\n                                                                           correct={label.correct}\r\n                                                                           clue={this.state.clue}\r\n                                                                            lang={this.props.lang}\r\n                                                                           resetRoundHandler={this.resetRoundHandler}/>)});\r\n            if(this.state.clue >= 1 && this.state.clue < 3){\r\n                nextClue =<BtnSmall onClick={this.resetClue}>Next Clue</BtnSmall>\r\n            }\r\n        }\r\n        let answerInform = '';\r\n        if(this.state.answerInform){\r\n            answerInform = <AnswerInformer correct={this.state.answeredCorrectly} answer={this.state.correctAnswer} addedPoints={this.state.addedPoints}/>\r\n        }\r\n        // console.log(\"the final arrays\")\r\n        // console.log(textCompArray);\r\n        //     console.log(labelCompArray)\r\n\r\n    return (\r\n        <div className={'container ' + classes.GameDesk}>\r\n            <h2>Match the Verse to the Correct Text</h2>\r\n\r\n                <div className={classes.TextRow}>\r\n                    <div className={'row '}>\r\n                        {this.state.answerInform ? answerInform : textCompArray}\r\n                        {!this.state.answerInform && nextClue}\r\n                </div>\r\n                </div>\r\n\r\n            <div className='row'>\r\n                {this.state.answerInform ? <p></p> : labelCompArray}\r\n            </div>\r\n            <ScoreBoard score={this.props.score}/>\r\n            {this.state.answerInform ?\r\n                <p></p> : <TimeBox round={this.state.round} style={{display: 'inline'}} resetRoundHandler={this.resetRoundHandler} resetClue={this.resetClue}/>}\r\n\r\n        </div>\r\n    )};\r\n}\r\n\r\nclass TextInfo {\r\n    constructor(textNameEnglish,textNameHebrew,textHebrew,textEnglish){\r\n        this.textNameEnglish = textNameEnglish;\r\n        this.textNameHebrew = textNameHebrew;\r\n        this.textHebrew = textHebrew;\r\n        this.textEnglish = textEnglish;\r\n    }\r\n}\r\n\r\nclass Label{\r\n    constructor(textNameEnglish, textNameHebrew, correct){\r\n        this.textNameEnglish = textNameEnglish;\r\n        this.textNameHebrew = textNameHebrew;\r\n        this.correct = correct;\r\n    }\r\n}\r\n\r\nconst TextChapters = {\r\n            tanakh: {Genesis: 50,\r\n                Exodus:40,\r\n                Leviticus: 27,\r\n                Numbers: 36,\r\n                Deuteronomy: 34,\r\n                Joshua: 24,\r\n                Judges: 21,\r\n                I_Samuel: 31,\r\n                II_Samuel: 24,\r\n                I_Kings: 22,\r\n                II_Kings: 25,\r\n                Isaiah: 66,\r\n                Jeremiah: 52,\r\n                Ezekiel: 48,\r\n                Hosea: 14,\r\n                Joel: 4,\r\n                Amos: 9,\r\n                Obadiah: 1,\r\n                Jonah: 4,\r\n                Micah: 7,\r\n                Nahum: 3,\r\n                Habakkuk: 3,\r\n                Zephaniah: 3,\r\n                Haggai: 2,\r\n                Zechariah: 14,\r\n                Malachi: 3,\r\n                Psalms: 150,\r\n                Proverbs: 31,\r\n                Job: 42,\r\n                Song_of_Songs: 8,\r\n                Ruth: 4,\r\n                Lamentations: 5,\r\n                Ecclesiastes: 12,\r\n                Esther: 10,\r\n                Daniel: 12,\r\n                Ezra: 10,\r\n                Nehemiah: 13,\r\n                I_Chronicles: 29,\r\n                II_Chronicles: 36},\r\n    mishnah: {\r\n        Mishnah_Berakhot: 9,\r\n        Mishnah_Peah: 8,\r\n        Mishnah_Demai: 7,\r\n        Mishnah_Kilayim: 9,\r\n        Mishnah_Sheviit: 10,\r\n        Mishnah_Terumot: 11,\r\n        Mishnah_Maasrot: 5,\r\n        Mishnah_Maaser_Sheni: 5,\r\n        Mishnah_Challah: 4,\r\n        Mishnah_Orlah: 3,\r\n        Mishnah_Bikkurim: 4,\r\n        Mishnah_Shabbat: 24,\r\n        Mishnah_Eruvin: 10,\r\n        Mishnah_Pesachim: 10,\r\n        Mishnah_Shekalim: 8,\r\n        Mishnah_Yoma: 8,\r\n        Mishnah_Sukkah: 5,\r\n        Mishnah_Beitzah: 5,\r\n        Mishnah_Rosh_Hashanah: 4,\r\n        Mishnah_Taanit: 4,\r\n        Mishnah_Megillah: 4,\r\n        Mishnah_Moed_Katan: 3,\r\n        Mishnah_Chagigah: 3,\r\n        Mishnah_Yevamot: 16,\r\n        Mishnah_Ketubot: 13,\r\n        Mishnah_Nedarim: 11,\r\n        Mishnah_Nazir: 9,\r\n        Mishnah_Sotah: 9,\r\n        Mishnah_Gittin: 9,\r\n        Mishnah_Kiddushin:4,\r\n        Mishnah_Bava_Kamma: 10,\r\n        Mishnah_Bava_Metzia: 10,\r\n        Mishnah_Bava_Batra: 10,\r\n        Mishnah_Sanhedrin: 11,\r\n        Mishnah_Makkot: 3,\r\n        Mishnah_Shevuot: 8,\r\n        Mishnah_Eduyot: 8,\r\n        Mishnah_Avodah_Zarah: 5,\r\n        Mishnah_Avot: 5,\r\n        Mishnah_Horayot: 3,\r\n        Mishnah_Zevachim: 14,\r\n        Mishnah_Menachot: 13,\r\n        Mishnah_Chullin: 12,\r\n        Mishnah_Bekhorot: 9,\r\n        Mishnah_Arakhin: 9,\r\n        Mishnah_Temurah: 7,\r\n        Mishnah_Keritot: 6,\r\n        Mishnah_Meilah: 6,\r\n        Mishnah_Tamid: 7,\r\n        Mishnah_Middot: 5,\r\n        Mishnah_Kinnim: 3,\r\n        Mishnah_Kelim: 30,\r\n        Mishnah_Oholot: 18,\r\n        Mishnah_Negaim: 14,\r\n        Mishnah_Parah: 12,\r\n        Mishnah_Tahorot: 10,\r\n        Mishnah_Mikvaot: 10,\r\n        Mishnah_Niddah: 10,\r\n        Mishnah_Makhshirin: 6,\r\n        Mishnah_Zavim: 5,\r\n        Mishnah_Tevul_Yom: 4,\r\n        Mishnah_Yadayim: 4,\r\n        Mishnah_Oktzin: 3\r\n    },\r\n    talmud: {\r\n        Berakhot: 64,\r\n        Shabbat: 157,\r\n        Eruvin:105,\r\n        Pesachim: 121,\r\n        Rosh_Hashanah: 35,\r\n        Yoma: 88,\r\n        Sukkah: 56,\r\n        Beitzah: 40,\r\n        Taanit: 31,\r\n        Megillah: 32,\r\n        Moed_Katan: 29,\r\n        Chagigah: 27,\r\n        Yevamot: 122,\r\n        Ketubot: 112,\r\n        Nedarim: 91,\r\n        Nazir: 66,\r\n        Sotah:49,\r\n        Gittin: 90,\r\n        Kiddushin: 82,\r\n        Bava_Kamma: 119,\r\n        Bava_Metzia: 119,\r\n        Bava_Batra: 176,\r\n        Sanhedrin: 113,\r\n        Makkot: 24,\r\n        Shevuot: 49,\r\n        Avodah_Zarah: 76,\r\n        Horayot: 14,\r\n        Zevachim: 120,\r\n        Menachot: 110,\r\n        Chullin: 142,\r\n        Bekhorot: 61,\r\n        Arakhin: 34,\r\n        Temurah: 34,\r\n        Keritot: 28,\r\n        Meilah: 22,\r\n        Tamid: 8,\r\n        Niddah: 73\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from '../../styles/Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={classes.Modal}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from './assets/Modal';\r\nimport {BtnBig} from \"./assets/buttons\";\r\n\r\nconst EndGameModal = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Final Score:</h2>\r\n            <h2>{props.score}</h2>\r\n            <p>Thanks for Playing!</p>\r\n            <BtnBig onClick={props.reStartGame}>Play again</BtnBig>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EndGameModal;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfig} from \"./assets/buttons\";\r\n\r\n\r\nconst GameLang = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>Please choose a language for the verses</p>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <BtnConfig setConfig={() => props.setLang('hebrew')}>Hebrew</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setLang('english')}>English</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setLang('both')}>Both</BtnConfig>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameLang;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfig} from \"./assets/buttons\";\r\n\r\n\r\nconst GameText = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>Please choose a text</p>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <BtnConfig setConfig={() => props.setText('tanakh')}>Tanakh</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setText('mishnah')}>Mishnah</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setText('talmud')}>Talmud</BtnConfig>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameText;","import React, {Component} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport classes from '../../styles/Navbar.module.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class TimeBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className={classes.NavbarOuter} expand=\"lg\">\r\n                <Navbar.Brand href=\"#\">Sefarcade</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/matchingGame\" >Play</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnBig} from \"./assets/buttons\";\r\n\r\nconst StartGameModal = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>You will be presented with 3 verses from a book in the Hebrew Bible. They will appear on the screen gradually.\r\n            the fewer hints you are given before you guess the more a correct answer is worth. </p>\r\n            <p>!בהצלחה</p>\r\n            <BtnBig onClick={props.startGame}>Start</BtnBig>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StartGameModal;","import React, {Component} from 'react';\r\nimport MatchingRound from './MatchingRound';\r\nimport EndGameModal from './EndGameModal';\r\nimport GameLang from './GameLang';\r\nimport GameText from './GameText';\r\nimport Navbar from './assets/SiteNavBar';\r\nimport StartGameModal from './StartGameModal';\r\n\r\n\r\n\r\n\r\nexport default class MatchingGame extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lang: 'english',\r\n            text: 'tanakh',\r\n            score: 0,\r\n            round: 1,\r\n            gameStarted: false,\r\n            gameOver: false,\r\n            startGame: false,\r\n            gameLang: true,\r\n            gameText: false,\r\n            rounds: 10\r\n        }\r\n        this.updateScoreHandler = this.updateScoreHandler.bind(this);\r\n        this.startGame = this.startGame.bind(this);\r\n        this.setLang = this.setLang.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    updateScoreHandler = (score) => {\r\n        if(this.state.round == this.state.rounds){\r\n            this.setState( {\r\n                score: this.state.score + score,\r\n                gameOver: true,\r\n                gameStarted: false\r\n            })\r\n        }\r\n        else{\r\n            this.setState( {\r\n                score: this.state.score + score,\r\n                round: this.state.round + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    startGame = () => {\r\n        this.setState({\r\n            gameStarted: true,\r\n            score: 0,\r\n            round: 1,\r\n            gameOver: false,\r\n        })\r\n    }\r\n\r\n    setLang = (lang) => {\r\n        this.setState({\r\n            lang: lang,\r\n            gameLang: false,\r\n            gameText: true,\r\n\r\n        })\r\n    }\r\n    //reset texts, will need to reset clock\r\n    setText = (text) => {\r\n        this.setState({\r\n            text: text,\r\n            gameText: false,\r\n            startGame: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let currentDisplay;\r\n        if(this.state.gameOver){\r\n            currentDisplay = <EndGameModal reStartGame={this.startGame} score={this.state.score}/>;\r\n\r\n        }\r\n        else if(this.state.gameStarted){\r\n            currentDisplay = <MatchingRound updateScoreHandler={this.updateScoreHandler}\r\n                                            round={this.state.round}\r\n                                            score={this.state.score}\r\n                                            lang={this.state.lang}\r\n                                            text={this.state.text}/>;\r\n\r\n        }\r\n        else if(this.state.startGame){\r\n            currentDisplay = <StartGameModal startGame={this.startGame}></StartGameModal>;\r\n        }\r\n        else if(this.state.gameLang){\r\n            currentDisplay = <GameLang setLang={this.setLang}/>;\r\n        }\r\n        else if(this.state.gameText){\r\n            currentDisplay = <GameText setText={this.setText}/>;\r\n        }\r\n        return (\r\n            <div>\r\n                {currentDisplay}\r\n            </div>\r\n        )\r\n    }\r\n}","//Approach 1, an array of cells\r\nimport React, {Component} from 'react';\r\nimport '../styles/Crossword.scss';\r\n\r\nexport default class Crossword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeClueBoxes: '',\r\n            activeClue: '',\r\n            boxInFocus: ''\r\n        };\r\n\r\n        this.setActiveClueBoxes = this.setActiveClueBoxes.bind(this);\r\n        this.setActiveClue = this.setActiveClue.bind(this);\r\n        this.setBoxInFocus = this.setBoxInFocus.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.clues !== this.props.clues){\r\n            let key = Object.keys(this.props.clues)[1];\r\n            this.setState({\r\n                activeClueBoxes: this.props.clues[key].boxes,\r\n                activeClue: [key],\r\n                boxInFocus: this.props.clues[key].boxes[0]\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setActiveClueBoxes(boxes) {\r\n        this.setState({\r\n            activeClueBoxes: boxes\r\n        });\r\n    }\r\n\r\n    setActiveClue(clue) {\r\n        this.setState({\r\n            activeClue: clue\r\n        });\r\n    }\r\n\r\n    setBoxInFocus(box) {\r\n        this.setState({\r\n            boxInFocus: box\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"crossword\">\r\n        <Clues clues={ this.props.clues } setActiveClueBoxes={ this.setActiveClueBoxes } activeClue={ this.state.activeClue } setActiveClue={ this.setActiveClue } setBoxInFocus={ this.setBoxInFocus } />\r\n        <Board grid={ this.props.grid } allClues={ this.props.clues } clues={ this.props.clues } setActiveClueBoxes={ this.setActiveClueBoxes } highlightedBoxes={ this.state.activeClueBoxes } setActiveClue = { this.setActiveClue } activeClueBoxes={this.state.activeClueBoxes} setBoxInFocus={ this.setBoxInFocus } boxInFocus={ this.state.boxInFocus } dimensions={this.props.dimensions}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Clues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            across: [],\r\n            down: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props){\r\n            const cluesAcross = [];\r\n            const cluesDown = [];\r\n           // console.log(\"printing clueS: \")\r\n            for (const key in this.props.clues) {\r\n                const clue = this.props.clues[key];\r\n               // console.log(\"printing clue \" + key)\r\n                clue.id = key;\r\n                if (clue.direction === 'across') {\r\n                    cluesAcross.push(clue);\r\n                }\r\n                else {\r\n                    cluesDown.push(clue);\r\n                }\r\n            }\r\n        this.setState({\r\n            across : cluesAcross,\r\n            down : cluesDown\r\n        })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clue-lists\">\r\n                <div className=\"clue-list-wrapper\">\r\n                    <h2>Across</h2>\r\n                    <ol className=\"clue-list\">\r\n                        { this.state.across.map((clueData) => <Clue key={ clueData.id } clueID={ clueData.id } clueText={ clueData.clue } clueNumber={ clueData.number } clueBoxes={ clueData.boxes } clueDir={\"across\"} setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } isActive={ this.props.activeClue.indexOf(clueData.id) > -1 } setBoxInFocus={ this.props.setBoxInFocus }/>) }\r\n                    </ol>\r\n                </div>\r\n                <div className=\"clue-list-wrapper\">\r\n                    <h2>Down</h2>\r\n                    <ol className=\"clue-list\">\r\n                        { this.state.down.map((clueData) => <Clue key={ clueData.id } clueID={ clueData.id } clueText={ clueData.clue } clueNumber={ clueData.number } clueBoxes={ clueData.boxes } clueDir={\"down\"} setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } isActive={ this.props.activeClue.indexOf(clueData.id) > -1 } setBoxInFocus={ this.props.setBoxInFocus }/>)\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Clue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: props.isActive\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({\r\n                active: this.props.isActive\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        const activeClue = [];\r\n        activeClue.push(this.props.clueID);\r\n        this.props.setActiveClueBoxes(this.props.clueBoxes);\r\n        this.props.setActiveClue(activeClue);\r\n        if(this.props.clueDir == \"down\"){\r\n            this.props.setBoxInFocus(this.props.clueBoxes[0]);\r\n        }\r\n        else{\r\n            this.props.setBoxInFocus(this.props.clueBoxes[this.props.clueBoxes.length - 1]);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className={`clue ${ this.state.active ? 'active' : ''}`}>\r\n                <button className=\"clue-button\" onClick={ this.handleClick }>\r\n                    <span className=\"clue-number\">{ this.props.clueNumber }.</span>\r\n                    <span className=\"clue-text\">{ this.props.clueText }</span>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boxMatrix: [],\r\n            boxes: []\r\n        }\r\n        this.isBoxFilled = this.isBoxFilled.bind(this)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props){\r\n            let boxes = this.props.grid.map((box) => {\r\n                const { id, letter, clues, label } = box;\r\n                return <Box key={ id } id={ id } letter={ letter } boxMatrix={this.state.boxMatrix} boxClues = { clues } label={ label } allClues={ this.props.allClues } isHighlighted={ this.props.highlightedBoxes.indexOf(id) > -1 } setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } activeClueBoxes={this.props.activeClueBoxes} setBoxInFocus={ this.props.setBoxInFocus } boxInFocus={this.props.boxInFocus}  dimensions={this.props.dimensions} isBoxFilled={this.isBoxFilled}/>\r\n            });\r\n            let boxMatrix = [];\r\n            for(let i = 0; i < this.props.dimensions[1];i++){\r\n                let row = [];\r\n                for(let j = 0; j < this.props.dimensions[0];j++){\r\n                    row.push(boxes[(i * this.props.dimensions[1]) + j]);\r\n                }\r\n                boxMatrix.push(row);\r\n            }\r\n            this.setState({\r\n                boxMatrix: boxMatrix,\r\n                boxes: boxes\r\n            })\r\n        }\r\n    }\r\n\r\n    isBoxFilled =(id) =>{\r\n            return !(this.props.grid.find(x => x.id == id).letter == null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"crossword-board\">\r\n                {this.state.boxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Box extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            highlight: props.isHighlighted,\r\n            isInFocus: (props.boxInFocus == this.props.id)\r\n        };\r\n\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n        this.uniKeyCode = this.uniKeyCode.bind(this);\r\n        this.uniKeyUp = this.uniKeyUp.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props) {\r\n            //clue clicking instigated the focus\r\n            if ((this.props.boxInFocus == this.props.id)) {\r\n                this.textInput.focus();\r\n            }\r\n            this.setState({\r\n                highlight: this.props.isHighlighted,\r\n                isInFocus: this.props.isInFocus\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleFocus(event) {\r\n        //if the focus happened as a result of a click only and not propigation\r\n        if(!(this.props.activeClueBoxes.includes(this.props.id))){\r\n            this.props.setActiveClue(this.props.boxClues);\r\n\r\n            let boxesToHighlight = [];\r\n            for (const clue of this.props.boxClues) {\r\n                boxesToHighlight = boxesToHighlight.concat(this.props.allClues[clue].boxes);\r\n            }\r\n\r\n            this.props.setActiveClueBoxes(boxesToHighlight);\r\n            this.props.setBoxInFocus(this.props.id);\r\n        }\r\n    }\r\n\r\n    uniKeyCode(event) {\r\n        let key = event.keyCode;\r\n        let x = this.props.id.charCodeAt(0) - 65;\r\n        let y = parseInt(this.props.id.charAt(1));\r\n        if(key == 37){\r\n            if(x > 0){\r\n                x -= 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if(key == 38){\r\n            if(y > 1){\r\n                y -= 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n        else if(key == 39){\r\n            if(x < this.props.dimensions[0] - 1){\r\n                x += 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n        else if(key == 40){\r\n\r\n            if(y <= this.props.dimensions[1]){\r\n                y += 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    uniKeyUp(event) {\r\n        let key = event.keyCode;\r\n        let x = this.props.id.charCodeAt(0) - 65;\r\n        let y = parseInt(this.props.id.charAt(1));\r\n        if (key >= 65 && key <= 90){\r\n                if(this.props.boxClues[0].charAt(0) == 'A'){\r\n                    if(x > 0){\r\n                        x -= 1;\r\n                        let id = String.fromCharCode(x+ 65) + y;\r\n                        if(this.props.isBoxFilled(id)){\r\n                            this.props.setBoxInFocus(id);\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(y < this.props.dimensions[1]  - 1){\r\n                        y += 1;\r\n                        let id = String.fromCharCode(x+ 65) + y;\r\n                        if(this.props.isBoxFilled(id)){\r\n                            this.props.setBoxInFocus(id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    render() {\r\n        let visibleLabel;\r\n        let input;\r\n\r\n        if (this.props.label) {\r\n            visibleLabel = <span className=\"box-label\">{this.props.label}</span>\r\n        }\r\n\r\n        if (this.props.letter) {\r\n            input = <input type=\"text\" maxLength=\"1\" className={ `box-input ${this.state.highlight ? 'highlight' : ''}` } onFocus={ this.handleFocus } onKeyDown={this.uniKeyCode} onKeyUp={this.uniKeyUp} ref={(input) => { this.textInput = input }} />\r\n        }\r\n\r\n        return (\r\n            <div className={ `box ${!this.props.letter ? ' blank' : ''}` }>\r\n                { visibleLabel }\r\n                { input }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst GRID_DATA = [\r\n//   Row A\r\n    {\r\n        id: 'A1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A2',\r\n        letter: 'L',\r\n        clues: ['Ac1'],\r\n        label: 1\r\n    },\r\n    {\r\n        id: 'A3',\r\n        letter: 'I',\r\n        clues: ['Ac1', 'Dn2'],\r\n        label: 2\r\n    },\r\n    {\r\n        id: 'A4',\r\n        letter: 'F',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A5',\r\n        letter: 'E',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A6',\r\n        letter: 'C',\r\n        clues: ['Ac1', 'Dn3'],\r\n        label: 3\r\n    },\r\n    {\r\n        id: 'A7',\r\n        letter: 'Y',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A8',\r\n        letter: 'C',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A9',\r\n        letter: 'L',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A10',\r\n        letter: 'E',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row B\r\n    {\r\n        id: 'B1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B3',\r\n        letter: 'M',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B6',\r\n        letter: 'O',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row C\r\n    {\r\n        id: 'C1',\r\n        letter: 'C',\r\n        clues: ['Ac4', 'Dn4'],\r\n        label: 4\r\n    },\r\n    {\r\n        id: 'C2',\r\n        letter: 'O',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C3',\r\n        letter: 'M',\r\n        clues: ['Ac4', 'Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C4',\r\n        letter: 'P',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C5',\r\n        letter: 'O',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C6',\r\n        letter: 'N',\r\n        clues: ['Ac4', 'Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C7',\r\n        letter: 'E',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C8',\r\n        letter: 'N',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C9',\r\n        letter: 'T',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C10',\r\n        letter: 'S',\r\n        clues: ['Ac4', 'Dn5'],\r\n        label: 5\r\n    },\r\n    {\r\n        id: 'C11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row D\r\n    {\r\n        id: 'D1',\r\n        letter: 'U',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D3',\r\n        letter: 'U',\r\n        clues: ['Dn2']\r\n    },\r\n    {\r\n        id: 'D4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D6',\r\n        letter: 'S',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D10',\r\n        letter: 'U',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row E\r\n    {\r\n        id: 'E1',\r\n        letter: 'R',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E3',\r\n        letter: 'T',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E6',\r\n        letter: 'T',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E10',\r\n        letter: 'P',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row F\r\n    {\r\n        id: 'F1',\r\n        letter: 'L',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F3',\r\n        letter: 'A',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F6',\r\n        letter: 'R',\r\n        clues: ['Dn3', 'Ac6'],\r\n        label: 6\r\n    },\r\n    {\r\n        id: 'F7',\r\n        letter: 'E',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F8',\r\n        letter: 'N',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F9',\r\n        letter: 'D',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F10',\r\n        letter: 'E',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F11',\r\n        letter: 'R',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n//   Row G\r\n    {\r\n        id: 'G1',\r\n        letter: 'Y',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G3',\r\n        letter: 'B',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G6',\r\n        letter: 'U',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G10',\r\n        letter: 'R',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row H\r\n    {\r\n        id: 'H1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H3',\r\n        letter: 'L',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H6',\r\n        letter: 'C',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H9',\r\n        letter: 'K',\r\n        clues: ['Dn7'],\r\n        label: 7\r\n    },\r\n    {\r\n        id: 'H10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row I\r\n    {\r\n        id: 'I1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I2',\r\n        letter: 'S',\r\n        clues: ['Ac8'],\r\n        label: 8\r\n    },\r\n    {\r\n        id: 'I3',\r\n        letter: 'E',\r\n        clues: ['Ac8', 'Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I4',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I5',\r\n        letter: 'S',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I6',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I7',\r\n        letter: 'A',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I8',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I9',\r\n        letter: 'E',\r\n        clues: ['Ac8', 'Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row J\r\n    {\r\n        id: 'J1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J3',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J6',\r\n        letter: 'O',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J9',\r\n        letter: 'Y',\r\n        clues: ['Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row K\r\n    {\r\n        id: 'K1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K3',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K5',\r\n        letter: 'P',\r\n        clues: ['Ac9'],\r\n        label: 9\r\n    },\r\n    {\r\n        id: 'K6',\r\n        letter: 'R',\r\n        clues: ['Ac9', 'Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K7',\r\n        letter: 'O',\r\n        clues: ['Ac9'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K8',\r\n        letter: 'P',\r\n        clues: ['Ac9'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K9',\r\n        letter: 'S',\r\n        clues: ['Ac9', 'Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n];\r\n\r\n\r\n\r\nconst CLUE_DATA = {\r\n    'Ac1': {\r\n        clue: 'You can call these types of methods when components will be or have been mounted, updated, or unmounted',\r\n        answer: 'lifecycle',\r\n        direction: 'across',\r\n        number: 1,\r\n        boxes: ['A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10']\r\n    },\r\n    'Dn2': {\r\n        clue: 'The unchanging nature of 9 Across',\r\n        answer: 'immutable',\r\n        direction: 'down',\r\n        number: 2,\r\n        boxes: ['A3', 'B3', 'C3', 'D3', 'E3', 'F3', 'G3', 'H3', 'I3']\r\n    },\r\n    'Dn3': {\r\n        clue: 'The method in which you assign a component\\'s initial state',\r\n        answer: 'constructor',\r\n        direction: 'down',\r\n        number: 3,\r\n        boxes: ['A6', 'B6', 'C6', 'D6', 'E6', 'F6', 'G6', 'H6', 'I6', 'J6', 'K6']\r\n    },\r\n    'Ac4': {\r\n        clue: 'Independent, reusable pieces that make up your app',\r\n        answer: 'components',\r\n        direction: 'across',\r\n        number: 4,\r\n        boxes: ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10']\r\n    },\r\n    'Dn4': {\r\n        clue: 'The type of braces you use to embed JavaScript expressions in JSX',\r\n        answer: 'curly',\r\n        direction: 'down',\r\n        number: 4,\r\n        boxes: ['C1', 'D1', 'E1', 'F1', 'G1']\r\n    },\r\n    'Dn5': {\r\n        clue: 'A method that runs the base constructor class',\r\n        answer: 'super',\r\n        direction: 'down',\r\n        number: 5,\r\n        boxes: ['C10', 'D10', 'E10', 'F10', 'G10']\r\n    },\r\n    'Ac6': {\r\n        clue: 'A method to create and insert a component in the DOM',\r\n        answer: 'render',\r\n        direction: 'across',\r\n        number: 6,\r\n        boxes: ['F6', 'F7', 'F8', 'F9', 'F10', 'F11']\r\n    },\r\n    'Dn7': {\r\n        clue: 'A unique identifier for list items',\r\n        answer: 'keys',\r\n        direction: 'down',\r\n        number: 7,\r\n        boxes: ['H9', 'I9', 'J9', 'K9']\r\n    },\r\n    'Ac8': {\r\n        clue: 'The only method by which you can update a component\\'s state',\r\n        answer: 'setstate',\r\n        direction: 'across',\r\n        number: 8,\r\n        boxes: ['I2', 'I3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9']\r\n    },\r\n    'Ac9': {\r\n        clue: 'A read-only object that contains a component\\'s attributes passed down to it from its parent',\r\n        answer: 'props',\r\n        direction: 'across',\r\n        number: 9,\r\n        boxes: ['K5', 'K6', 'K7', 'K8', 'K9']\r\n    }\r\n};\r\n","export const xWords = {\r\n    /* CLASS CONSTANTS */\r\n    HORIZONTAL: 1,\t\t// INTENDED DIRECTION\r\n    VERTICAL: 2,\t\t// INTENDED DIRECTION\r\n\r\n    MAX_PASSES: 3,\t\t// MAXIMUM NUMBER OF ATTEMPTS TO PLACE A WORD\r\n    MAX_RUNTIME: 5000, \t// THE MAXIMUM RUN TIME IN MILLISECONDS\r\n\r\n    CENTER_FIRST: false,// PLACE THE FIRST WORD IN THE GRID CENTER\r\n    UNSET: -1,\t\t\t// CONSTANT FOR UNASSIGNED INDEXES\r\n\r\n\r\n    /* CLASS PROPERTIES */\r\n    _self:this,\r\n    Grid:new Array(),\t\t\t// Answer Grid\r\n    QuestionGrid:new Array(),\t// Question Grid (HOLDS NUMBERING)\r\n\r\n    Words:new Array(),\t\t\t// Word Objects\r\n    QuestionList:new Array(),\t// Numbered clues\r\n    bestFit:null,\t\t\t\t// Records the grid with fewest orphans\r\n    // over all iterations.\r\n    sErrors:'',\r\n    lang: 'he',\r\n\r\n    /* PUBLIC METHODS */\r\n    SetLang : function(lang){\r\n        this.lang = lang\r\n    },\r\n    // resets the grid and word list\r\n    Reset: function(){\r\n        this.Grid = new Array();\r\n        this.QuestionGrid = new Array();\r\n        this.QuestionList = new Array();\r\n    },\r\n\r\n    ResetComplete: function(){\r\n        this.Reset();\r\n\r\n        this.Words = new Array();\r\n        this.bestFit = null;\r\n        this.sErrors = '';\r\n    },\r\n\r\n    // INDICATES HOW MANY GROUPINGS OF WORDS ARE ON THE GRID\r\n    GetNumberOfWordGroups: function(){\r\n        var iReturn = 0;\r\n        for (var x = 0; x < this.Words.length; x++){\r\n            if (this.Words[x].orphaned){\r\n                iReturn++;\r\n            }\r\n        }\r\n        return iReturn;\r\n    },\r\n\r\n    GetUnusedWords: function(){\r\n        var unusedArray = new Array();\r\n        for (var x = 0; x < this.Words.length; x++){\r\n            if (this.Words[x].chosenPosition == null){\r\n                unusedArray.push(this.Words[x].word);\r\n            }\r\n        }\r\n        return unusedArray;\r\n    },\r\n\r\n    GetQuestionGrid:function(){\r\n        return this.QuestionGrid;\r\n    },\r\n\r\n    GetQuestionList:function(){\r\n        return this.QuestionList;\r\n    },\r\n\r\n\r\n    Create: function(height, width, arrayOfWords){\r\n\r\n        // RESET AND CREATE THE NEW GRID\r\n        // AND THE QUESTION GRID\r\n\r\n        var time1 = new Date().getTime();\r\n        var time2;\r\n        var lIteration = 1;\r\n\r\n        this.ResetComplete();\r\n        this.bestFit = null;\r\n\r\n        // LOAD ALL WORDS TWO OR MORE LETTERS LONG\r\n        for (var x=0; x < arrayOfWords.length; x++){\r\n            if (arrayOfWords[x].trim().length > 1){\r\n                this.Words.push(new Word(arrayOfWords[x]));\r\n            }\r\n        }\r\n\r\n\r\n        do {\r\n\r\n            this.Reset();\r\n\r\n            this.Grid = new Array(width);\r\n            this.QuestionGrid = new Array(width);\r\n\r\n            for (var i = 0; i < this.Grid.length; i++){\r\n                this.Grid[i] = new Array(height);\r\n                this.QuestionGrid[i] = new Array(height);\r\n            }\r\n\r\n            for (var i = 0; i < this.Grid.length; i++){\r\n                for (var j = 0; j < this.Grid[0].length; j++){\r\n                    this.Grid[i][j] = '';\r\n                    this.QuestionGrid[i][j] = '';\r\n                }\r\n            }\r\n\r\n            // RESET WORDS - ESSENTIAL SO THAT MULTIPLE\r\n            // ITERATIONS CAN BE RUN\r\n            for (var x=0; x < this.Words.length; x++){\r\n                this.Words[x].Reset();\r\n            }\r\n\r\n            // ORDER THE WORDS BY LENGTH\r\n            this.SortByLength(this.Words);\r\n\r\n            for (var y = 1; y <= this.MAX_PASSES; y++){\r\n                for (var x=0; x < this.Words.length; x++){\r\n                    if (((this.Words[x].orphaned)\r\n                        &&(this.Words[x].posIndex == this.UNSET))\r\n                        ||(y == 1)){\r\n                        this.Words[x].Reset();\r\n                        this.AddWord(this.Words[x],x,y);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.GenerateQuestionGrid();\r\n\r\n            if (this.bestFit != null){\r\n                if (this.bestFit.WordGroupsCount\r\n                    > this.GetNumberOfWordGroups()){\r\n                    this.bestFit = null;\r\n                    this.bestFit = new AlternativeGrid(\r\n                        this.Grid.slice(),\r\n                        this.Words.slice(),\r\n                        this.QuestionGrid.slice(),\r\n                        this.QuestionList.slice(),\r\n                        this.GetNumberOfWordGroups());\r\n                }\r\n            } else {\r\n                var x = this.GetNumberOfWordGroups();\r\n                this.bestFit = new AlternativeGrid(\r\n                    this.Grid.slice(),\r\n                    this.Words.slice(),\r\n                    this.QuestionGrid.slice(),\r\n                    this.QuestionList.slice(),\r\n                    this.GetNumberOfWordGroups());\r\n            }\r\n\r\n\r\n            lIteration++;\r\n            time2 = new Date().getTime();\r\n\r\n        } while ((time2 - time1 < this.MAX_RUNTIME)\r\n        &&(this.GetNumberOfWordGroups() > 1));\r\n\r\n\r\n\r\n\r\n        if (this.bestFit.WordGroupsCount\r\n            < this.GetNumberOfWordGroups()){\r\n            this.Reset();\r\n            this.Grid = this.bestFit.Grid;\r\n            this.Words = this.bestFit.Words;\r\n            this.QuestionGrid = this.bestFit.QuestionGrid;\r\n            this.QuestionList = this.bestFit.QuestionList;\r\n        }\r\n\r\n\r\n\r\n        return this.Grid;\r\n    },\r\n\r\n    /**********************************************************/\r\n    /* PRIVATE METHODS                                        */\r\n    /**********************************************************/\r\n    GenerateQuestionGrid: function(){\r\n        var counter = 1;\r\n\r\n        for (var i = 0; i < this.Words.length; i++){\r\n            if (this.Words[i].posIndex != this.UNSET){\r\n                if (this.Words[i].crossingPositions.length > 0){\r\n\r\n                    var tmpObj = {\r\n                        x: this.Words[i].crossingPositions[this.Words[i].posIndex].x,\r\n                        y: this.Words[i].crossingPositions[this.Words[i].posIndex].y,\r\n                        d: this.Words[i].crossingPositions[this.Words[i].posIndex].direction,\r\n                        clue: this.Words[i].clue\r\n                    };\r\n                    this.QuestionList.push(tmpObj);\r\n\r\n                } else {\r\n\r\n                    var tmpObj = {\r\n                        x: this.Words[i].availablePositions[this.Words[i].posIndex].x,\r\n                        y: this.Words[i].availablePositions[this.Words[i].posIndex].y,\r\n                        d: this.Words[i].availablePositions[this.Words[i].posIndex].direction,\r\n                        num: 0,\r\n                        clue: this.Words[i].clue\r\n                    };\r\n                    this.QuestionList.push(tmpObj);\r\n\r\n                }\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        this.QuestionList = this.SortXwordQuestions(this.QuestionList);\r\n\r\n        var counter = 0\r\n        for (var k = 0; k < this.QuestionList.length; k++){\r\n            if (this.QuestionGrid[this.QuestionList[k].x][this.QuestionList[k].y].length == 0){\r\n                counter++;\r\n                this.QuestionGrid[this.QuestionList[k].x][this.QuestionList[k].y] = counter.toString();\r\n                this.QuestionList[k].num = counter;\r\n            } else {\r\n                this.QuestionList[k].num = counter;\r\n            }\r\n        }\r\n    },\r\n\r\n    // SORT THE ARRAY LONGEST TO SHORTEST\r\n    SortXwordQuestions: function(lArray){\r\n        lArray.sort(function(a,b){\r\n            var bReturn = 1;\r\n            if (a.y < b.y) bReturn = -1;\r\n            if ((a.y == b.y)&&(a.x < b.x)) bReturn = -1;\r\n            return bReturn;\r\n        });\r\n        return lArray;\r\n    },\r\n\r\n\r\n    SortByLength: function(lArray){\r\n        lArray.sort(function(a,b){\r\n            return a.word.length < b.word.length;\r\n        });\r\n        return lArray;\r\n    },\r\n\r\n\r\n    // ADD A WORD TO THE GRID (IF POSSIBLE)\r\n    AddWord: function(newWord, callNumber, passNumber){\r\n\r\n        this.GetPositions(newWord, callNumber, passNumber);\r\n\r\n\r\n        if (newWord.crossingPositions.length +\r\n            newWord.availablePositions.length > 0){\r\n\r\n            var choice = this.UNSET;\r\n            var newPos;\r\n\r\n            // CHOOSE A CROSSING POINT POSITION IF\r\n            // THERE IS ONE - OTHERWISE RANDOMLY\r\n            // CHOOSE FROM THE AVAILABLE POSITIONS\r\n            if (newWord.crossingPositions.length > 0){\r\n                choice = Math.floor(\r\n                    (Math.random() *\r\n                        newWord.crossingPositions.length));\r\n                newPos = newWord.crossingPositions[choice];\r\n                newWord.orphaned = false;\r\n            } else if (((callNumber == 0)&&(passNumber == 1))\r\n                ||(passNumber >= this.MAX_PASSES)){\r\n                choice = Math.floor(\r\n                    (Math.random() *\r\n                        newWord.availablePositions.length));\r\n                newPos = newWord.availablePositions[choice];\r\n            }\r\n\r\n            if (choice != this.UNSET){\r\n                newWord.posIndex = choice;\r\n\r\n                if (newWord.crossingPositions.length > 0){\r\n                    newWord.chosenPosition = newWord.crossingPositions[newWord.posIndex];\r\n                } else if (newWord.availablePositions.length > 0) {\r\n                    newWord.chosenPosition = newWord.availablePositions[newWord.posIndex];\r\n                }\r\n\r\n                // LOOP THROUGH THE WORD PLACING IT IN THE GRID\r\n                let horWord = newWord.word.split('').reverse().join('');\r\n                for (var count = 0; count < newWord.word.length; count++){\r\n                    if (newPos.direction == this.HORIZONTAL){\r\n                        this.Grid[newPos.x + count][newPos.y] =\r\n                            horWord.charAt(count);\r\n                    } else if (newPos.direction == this.VERTICAL){\r\n                        this.Grid[newPos.x][newPos.y + count] =\r\n                            newWord.word.charAt(count);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    // RETURNS ALL THE AVAILABLE VALID POSITIONS FOR PLACING THE WORD\r\n    GetPositions: function(newWord, callNumber, passNumber){\r\n\r\n        if ((this.CENTER_FIRST)&&\r\n            (callNumber == 0)&&\r\n            (passNumber == 1)){\r\n\r\n            var newPos = undefined;\r\n            let word = newWord.word.split('').reverse().join('');\r\n            var x = 0;\r\n            var y = 0;\r\n            var d = this.HORIZONTAL;\r\n\r\n            if (this.Grid.length > this.Grid[0].length){\r\n                x = Math.floor(this.Grid.length/2);\r\n                y = Math.floor((this.Grid[0].length - newWord.word.length)/2);\r\n                d = this.VERTICAL\r\n            } else {\r\n                x = Math.floor((this.Grid.length - newWord.word.length)/2);\r\n                y = Math.floor(this.Grid[0].length/2);\r\n                let word = newWord.word;\r\n                d = this.HORIZONTAL\r\n            }\r\n\r\n            newPos = this.TestPosition(word,x,y,d);\r\n            if (newPos !== undefined) {\r\n                newWord.availablePositions.push(newPos);\r\n            }\r\n\r\n        } else {\r\n            for (var x = 0; x < this.Grid.length; x++){\r\n                for (var y = 0; y < this.Grid[0].length; y++){\r\n\r\n                    var newPos = undefined;\r\n\r\n                    newPos = this.TestPosition(newWord.word.split('').reverse().join(''),x,y,this.HORIZONTAL);\r\n                    if (newPos !== undefined) {\r\n                        if (newPos.crossingPoint > 0){\r\n                            newWord.crossingPositions.push(newPos);\r\n                        } else {\r\n                            newWord.availablePositions.push(newPos);\r\n                        }\r\n                    }\r\n                    newPos = this.TestPosition(newWord.word,x,y,this.VERTICAL);\r\n                    if (newPos !== undefined) {\r\n                        if (newPos.crossingPoint > 0){\r\n                            newWord.crossingPositions.push(newPos);\r\n                        } else {\r\n                            newWord.availablePositions.push(newPos);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    // TRIES A POSITION TO SEE IF IT IS ACCEPTABLE\r\n    TestPosition: function(newWord,x,y,direction){\r\n\r\n        var crossingPoint = 0;\r\n\r\n        // UNNACCEPTABLE IF THERE IS A LETTER\r\n        // IN THE SQUARE BEFORE THE PROPOSED START\r\n        if (this.CharBeforeFirstLetter(x,y,direction))\r\n            return;\r\n\r\n        // UNNACCEPTABLE IF THERE IS A LETTER\r\n        // IN THE SQUARE AFTER THE END\r\n        if (this.CharAfterLastLetter(newWord.length,x,y,direction))\r\n            return;\r\n\r\n\r\n        // DEAL WITH HORIZONTAL AND VERTICAL WORD PLACEMENT\r\n        // SEPARATELY\r\n        if (direction == this.HORIZONTAL){\r\n\r\n            // UNACCEPTABLE IF THERE IS NO SPACE IN THE GRID\r\n            if (x + newWord.length > this.Grid.length)\r\n                return;\r\n\r\n            for (var count = 0; count < newWord.length; count++){\r\n\r\n                // 4 CHECKS:\r\n                // 1 - UNACCEPTABLE IF THERE IS A CHARACTER ON\r\n                //\t\tON THE PROPOSED PATH OF THIS WORD\r\n                // 2 - UNACCEPTABLE IF THERE IS ANOTHER WORD IN THE\r\n                //\t\tSAME DIRECTION AT THIS POINT\r\n                // 3 - ACCEPTABLE IF THE CHARACTER MATCHES THE\r\n                //\t\tTHE CHARACTER IN THIS WORD - ADD\r\n                //\t\tA CROSSING POINT\r\n                // 4 - UNACCEPTABLE IF THERE ARE CHARACTERS\r\n                //\t\tEITHER SIDE OF THIE PROPOSED PATH\r\n                if ((this.Grid[x + count][y].length > 0)&&\r\n                    (this.Grid[x + count][y] !=\r\n                        newWord.charAt(count))){\r\n                    return;\r\n                } else if (this.AnotherWordOnThisLine(x + count,y,direction)){\r\n                    return;\r\n                } else if (this.Grid[x + count][y] ==\r\n                    newWord.charAt(count).toString()){\r\n                    crossingPoint++;\r\n                } else if (this.SidesHaveChars(x+count,y,direction)){\r\n                    return;\r\n                }\r\n            }\r\n\r\n        } else if (direction == this.VERTICAL){\r\n\r\n            // UNACCEPTABLE IF THERE IS NO SPACE IN THE GRID\r\n            if (y + newWord.length > this.Grid[0].length)\r\n                return;\r\n\r\n            for (var count = 0; count < newWord.length; count++){\r\n\r\n                // 4 CHECKS:\r\n                // 1 - UNACCEPTABLE IF THERE IS A CHARACTER ON\r\n                //\t\tON THE PROPOSED PATH OF THIS WORD\r\n                // 2 - UNACCEPTABLE IF THERE IS ANOTHER WORD IN THE\r\n                //\t\tSAME DIRECTION AT THIS POINT\r\n                // 3 - ACCEPTABLE IF THE CHARACTER MATCHES THE\r\n                //\t\tTHE CHARACTER IN THIS WORD - ADD\r\n                //\t\tA CROSSING POINT\r\n                // 4 - UNACCEPTABLE IF THERE ARE CHARACTERS\r\n                //\t\tEITHER SIDE OF THIE PROPOSED PATH\r\n                if ((this.Grid[x][y + count].length > 0)&&\r\n                    (this.Grid[x][y + count] !=\r\n                        newWord.charAt(count))){\r\n                    return;\r\n                } else if (this.AnotherWordOnThisLine(x,y + count,direction)){\r\n                    return;\r\n                } else if (this.Grid[x][y + count] ==\r\n                    newWord.charAt(count).toString()){\r\n                    crossingPoint++;\r\n                } else if (this.SidesHaveChars(x,y+count,direction)){\r\n                    return;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // IF NO PROBLEMS RETURN THE POSITION DETAILS\r\n        return new Position(x,y,direction,crossingPoint);\r\n    },\r\n\r\n\r\n    // CHECKS THE SQUARE AFTER THE WORD TO SEE IF VALID\r\n    CharAfterLastLetter: function(len,x,y,direction){\r\n        var bCharAfterLastLetter = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (x + len < this.Grid.length){\r\n                if (this.Grid[x + len][y].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (y + len < this.Grid[0].length){\r\n                if (this.Grid[x][y + len].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bCharAfterLastLetter;\r\n    },\r\n\r\n    // CHECKS THE SQUARE BEFORE THE WORD TO SEE IF VALID\r\n    CharBeforeFirstLetter: function(x,y,direction){\r\n        var bCharBeforeFirstLetter = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (x-1 >= 0){\r\n                if (this.Grid[x-1][y].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (y-1 >= 0){\r\n                if (this.Grid[x][y-1].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bCharBeforeFirstLetter;\r\n    },\r\n\r\n\r\n    // CHECK THE POSITION TO SEE IF IT WILL OVERWRITE ANOTHER WORD\r\n    // IN THE SAME DIRECTION\r\n    AnotherWordOnThisLine: function(x,y,direction){\r\n        for (var z = 0; z < this.Words.length; z++){\r\n            if (this.Words[z].chosenPosition != null){\r\n                if ((this.Words[z].chosenPosition.x == x)&&\r\n                    (this.Words[z].chosenPosition.y == y)&&\r\n                    (this.Words[z].chosenPosition.direction == direction)){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n\r\n    // CHECKS THE POSITIONS TO THE SIDE OF THE PROPOSED\r\n    // PATH TO SEE IF THERE ARE ANY CHARACTERS WHICH\r\n    // COULD LEAD TO CONFLICT\r\n    SidesHaveChars: function(x,y,direction){\r\n        var bHasChars = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (y-1 >= 0){\r\n                if (this.Grid[x][y-1].length > 0) return true;\r\n            }\r\n            if (y+1 < this.Grid[0].length){\r\n                if (this.Grid[x][y+1].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (x-1 >= 0){\r\n                if (this.Grid[x-1][y].length > 0) return true;\r\n            }\r\n            if (x+1 < this.Grid.length){\r\n                if (this.Grid[x+1][y].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bHasChars;\r\n    },\r\n\r\n\r\n};\r\n\r\n\r\n/**\r\n * OBJECT: Position\r\n *\r\n * Holds the details of a valid position on the grid\r\n *\r\n * X and Y - indicate horizonal and vertical positions\r\n * on the grid.\r\n *\r\n * Direction:\r\n * \t1 indicates horizontal\r\n * \t-1 indicates vertical\r\n * CrossingPoint:\r\n * \tIndicates the number of valid crossing points with\r\n *\t\tother words already on the grid.\r\n **/\r\nfunction Position(x,y,direction,crossingPoint){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.direction = direction;\r\n    this.crossingPoint = crossingPoint;\r\n}\r\n\r\n/**\r\n * OBJECT: Word\r\n *\r\n *\tHolds all the information related to an individual word\r\n *\r\n **/\r\nfunction Word(txt){\r\n    txt = txt.trim();\r\n    var pos = txt.indexOf(',');\r\n    if ((pos > 0)&&(pos < txt.length - 1)){\r\n        this.word = txt.substr(0,pos);\r\n        this.clue = txt.substr(pos + 1);\r\n    } else {\r\n        xWords.sErrors += 'Missing clue: ' + txt + '<br/>'\r\n        this.word = txt;\r\n        this.clue = txt;\r\n    }\r\n    this.crossingPositions = new Array();\r\n    this.availablePositions = new Array();\r\n    this.orphaned = true;\r\n    this.posIndex = -1;\r\n    this.chosenPosition = null;\r\n    this.ResetArrays = function(){\r\n        this.crossingPositions = new Array();\r\n        this.availablePositions = new Array();\r\n    };\r\n\r\n    this.Reset = function(){\r\n        this.crossingPositions = new Array();\r\n        this.availablePositions = new Array();\r\n        this.orphaned = true;\r\n        this.posIndex = -1;\r\n        this.chosenPosition = null;\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * OBJECT: AlternativeGrid\r\n *\r\n *\tSaves the state of a grid that has been processed.\r\n * This is to allow for evaluation of several runs of\r\n * the processor.\r\n **/\r\nfunction AlternativeGrid(grid, words, qGrid, qList, groupCount){\r\n    this.Grid = grid;\r\n    this.Words = words;\r\n    this.QuestionGrid = qGrid;\r\n    this.QuestionList = qList;\r\n    this.WordGroupsCount = groupCount;\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport Crossword from \"./Crossword\";\r\nimport {xWords} from \"./classes/xword\";\r\n\r\n// const MATRIX = [{x: 0, y: 0, d: 2, clue: \"חשונ\", num: 1},{x: 4, y: 0, d: 2, clue: \"אדר\", num: 2},{x: 0, y: 2, d: 1, clue: \"ויאמרמשה\", num: 3},\r\n// {x: 3, y: 2, d: 2, num: 4, clue: \"מילהאלי\"}, {x: 5, y: 2, d: 2, clue: \"מכבי\", num: 5},{x: 10, y: 3, d: 2, clue: \"תמוז\", num: 6},{x: 8, y: 4, d: 2, clue: \"ניסנ\", num: 7},\r\n//     {x: 5, y: 5, d: 1, clue: \"ירמיהו\", num: 8},{x: 2, y: 8, d: 1, clue: \"סיבנ\", num: 9}]\r\n// const MATRIX =[{x:0,y:0,d:2,clue:\"ויאמרמשה\",num: 1},\r\n//     {x:6,y:0,d:2,clue:\"מכבי\",num:2},{x:0,y:3,d:1,clue:\"מילהאלי\",num:1}]\r\nconst CLUE_LIST = [{word: \"חשונ\", clue: \"sad month\"},{word: \"אדר\", clue: \"happy month\"},{word: \"ויאמרמשה\", clue: \"And God Said to Moses\"},{word: \"מכבי\", clue: \"The israeli basketball club\"},{word: \"מילהאלי\", clue: \"Who is with god? Come with me\"},\r\n    {word: \"תמוז\", clue: \"fast month\"},{word: \"ניסנ\", clue: \"fרקק month\"},{word: \"ירמיהו\", clue: \"the boss\"},{word: \"סיבנ\", clue: \"it just is\"} ]\r\n\r\nconst WORD_LIST = [\"חשונ\",\"אדר\",\"ויאמרמשה\", \"מכבי\", \"מילהאלי\",\"תמוז\", \"ניסנ\", \"ירמיהו\", \"סיבנ\"]\r\n\r\n\r\nexport default class CrosswordGenerator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        xWords.Create(11,11,WORD_LIST);\r\n        this.state = {\r\n            dimensions: [11, 11],\r\n            gridMatrix: xWords.GetQuestionList(),//an array of objects x,y,dir,string,number\r\n            clueList: CLUE_LIST,\r\n            grid: [],\r\n            clues: {}\r\n        }\r\n        ;\r\n    }\r\n    componentDidMount() {\r\n        this.structure_Grid_Data();\r\n    }\r\n\r\n    structure_Grid_Data = () =>{\r\n        let grid = [];\r\n        let clues = {};\r\n        for(let i = 1; i <= this.state.dimensions[0]; i++){\r\n            for(let j = 0; j < this.state.dimensions[1]; j++){\r\n                let id = String.fromCharCode(65 + j) + i;\r\n                console.log(\"id : \" + id);\r\n                grid.push(new Grid_Data(id,null,null,null));\r\n            }\r\n        }\r\n        console.log(grid);\r\n\r\n        let labelCount = 1;\r\n        let currentLabel = 0;\r\n        let labelOffset = 0;\r\n\r\n        this.state.gridMatrix.forEach( word => {\r\n            let boxes = [];\r\n            [...word.clue].forEach( (letter, i) => {\r\n                let xComponent;\r\n                let yComponent;\r\n                if(word.d == 1){\r\n                    xComponent =String.fromCharCode(65 + word.x + i);\r\n                    yComponent = word.y + 1;\r\n                }\r\n                else{\r\n                    xComponent =String.fromCharCode(65 + word.x);\r\n                    yComponent = word.y + 1 + i;\r\n                }\r\n                let id = xComponent + yComponent;\r\n                boxes.push(id);\r\n                console.log(\"id2 : \" + id);\r\n                let data_to_change = grid.find(x => x.id === id);\r\n                data_to_change.letter = word.clue.charAt(i);\r\n                let dirComponent = (word.d == 1) ? \"Ac\":\"Dn\";\r\n                if(data_to_change.clues != null){\r\n                    data_to_change.clues.push(dirComponent + word.num);\r\n                }\r\n                else{\r\n                    data_to_change.clues = [dirComponent + word.num];\r\n                }\r\n                if(word.d == 1){\r\n                    if(i == word.clue.length - 1){\r\n                        if(data_to_change.label != null){\r\n                            currentLabel = data_to_change.label;\r\n                            labelOffset++;\r\n                        }\r\n                        else{\r\n                            data_to_change.label = labelCount - labelOffset;\r\n                            currentLabel = labelCount - labelOffset;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else{\r\n                    if(i == 0){\r\n                        if(data_to_change.label != null){\r\n                            currentLabel = data_to_change.label;\r\n                            labelOffset++;\r\n                        }\r\n                        else{\r\n                            data_to_change.label = labelCount - labelOffset;\r\n                            currentLabel = labelCount - labelOffset;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            let clue = this.state.clueList.find(x => x.word == word.clue).clue;\r\n            let direction = (word.d == 1) ? \"across\" : \"down\";\r\n            let dirKey = ((word.d == 1) ? \"Ac\":\"Dn\") + word.num;\r\n            clues[dirKey] =  new Clue_Data(clue,word.clue,direction,currentLabel, boxes);\r\n            labelCount++;\r\n        });\r\n        this.setState({\r\n            grid: grid,\r\n            clues: clues\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <Crossword clues={this.state.clues} grid={this.state.grid} dimensions={this.state.dimensions}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Grid_Data{\r\n    constructor(id,letter,clues,label){\r\n        this.id = id;\r\n        this.letter = letter;\r\n        this.clues = clues;\r\n        this.label = label\r\n    }\r\n}\r\n\r\nclass Clue_Data{\r\n        constructor(clue,answer,direction,number,boxes){\r\n            this.clue = clue;\r\n            this.answer = answer;\r\n            this.direction = direction;\r\n            this.number = number;\r\n            this.boxes = boxes;\r\n        }\r\n}","import React, {Component} from 'react';\r\nimport Crossward from '../Crossword';\r\nimport CrosswordGenerator from \"../CrosswordGenerator\";\r\n\r\n\r\nexport default class AboutPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <h2>About</h2>\r\n                <CrosswordGenerator/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HomePage from './components/pages/HomePage';\r\nimport MatchingGame from './components/MatchingGame';\r\nimport AboutPage from './components/pages/AboutPage'\r\nimport './App.css';\r\nimport Navbar from \"./components/assets/SiteNavBar\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n            <Route path=\"/matchingGame\" component={MatchingGame} />\r\n            <Route path=\"/about\" component={AboutPage}/>\r\n            <Route path=\"/\" component={HomePage} />\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}