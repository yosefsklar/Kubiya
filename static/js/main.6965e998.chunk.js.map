{"version":3,"sources":["styles/AnswerInformer.module.css","styles/Buttons.module.css","styles/StartGameModal.module.css","styles/TextBox.module.css","styles/MatchingRound.module.css","styles/Modal.module.css","styles/Navbar.module.css","components/pages/HomePage.js","components/classes/enums.js","components/classes/Utils.js","components/TextBox.js","components/assets/TimeBox.js","components/ScoreBoard.js","components/assets/buttons.js","components/AnswerInformer.js","components/classes/texts.js","components/MatchingRound.js","components/assets/Modal.js","components/EndGameModal.js","components/GameLang.js","components/GameText.js","components/GameLevel.js","components/StartGameModal.js","components/MatchingGame.js","components/Crossword.js","components/classes/xword.js","components/CrosswordGenerator.js","components/pages/AboutPage.js","components/assets/SiteNavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","props","state","className","Component","levels","lang","corpus","Utils","textArr","map","x","replace","rawString","array","i","length","j","Math","floor","random","tanakhN","require","U","TextBox","finalText","hebrew","showText","textHebrew","verseNumber","english","textEnglish","both","textNameEnglish","forEach","name","split","textWord","stripVowels","includes","repeat","join","console","log","classes","Hebrew","English","TimeBox","count","time","timerInterval","this","startCountDown","prevProps","prevState","snapshot","round","setState","clearInterval","timeInterval","interval","setInterval","resetClue","bind","style","display","marginLeft","ScoreBoard","score","BtnConfig","Btn","Config","onClick","setConfig","response","children","BtnBig","Big","BtnAnswer","Answer","resetRoundHandler","label","correct","clue","textNameHebrew","BtnSmall","Small","AnswerInformer","nextClueContext","clueShown","colorClass","Correct","Incorrect","langClass","answer","clues","points","addedPoints","contextBoxes","index","beforeContext","contextRange","tanakh","mishnah","talmud","answerText","afterContext","answerContext","chapter","Header","ContextBox","Context","Title","TextChapters","Genesis","Exodus","Leviticus","Numbers","Deuteronomy","Joshua","Judges","I_Samuel","II_Samuel","I_Kings","II_Kings","Isaiah","Jeremiah","Ezekiel","Hosea","Joel","Amos","Obadiah","Jonah","Micah","Nahum","Habakkuk","Zephaniah","Haggai","Zechariah","Malachi","Psalms","Proverbs","Job","Song_of_Songs","Ruth","Lamentations","Ecclesiastes","Esther","Daniel","Ezra","Nehemiah","I_Chronicles","II_Chronicles","Mishnah_Berakhot","Mishnah_Peah","Mishnah_Demai","Mishnah_Kilayim","Mishnah_Sheviit","Mishnah_Terumot","Mishnah_Maasrot","Mishnah_Maaser_Sheni","Mishnah_Challah","Mishnah_Orlah","Mishnah_Bikkurim","Mishnah_Shabbat","Mishnah_Eruvin","Mishnah_Pesachim","Mishnah_Shekalim","Mishnah_Yoma","Mishnah_Sukkah","Mishnah_Beitzah","Mishnah_Rosh_Hashanah","Mishnah_Taanit","Mishnah_Megillah","Mishnah_Moed_Katan","Mishnah_Chagigah","Mishnah_Yevamot","Mishnah_Ketubot","Mishnah_Nedarim","Mishnah_Nazir","Mishnah_Sotah","Mishnah_Gittin","Mishnah_Kiddushin","Mishnah_Bava_Kamma","Mishnah_Bava_Metzia","Mishnah_Bava_Batra","Mishnah_Sanhedrin","Mishnah_Makkot","Mishnah_Shevuot","Mishnah_Eduyot","Mishnah_Avodah_Zarah","Mishnah_Avot","Mishnah_Horayot","Mishnah_Zevachim","Mishnah_Menachot","Mishnah_Chullin","Mishnah_Bekhorot","Mishnah_Arakhin","Mishnah_Temurah","Mishnah_Keritot","Mishnah_Meilah","Mishnah_Tamid","Mishnah_Middot","Mishnah_Kinnim","Mishnah_Kelim","Mishnah_Oholot","Mishnah_Negaim","Mishnah_Parah","Mishnah_Tahorot","Mishnah_Mikvaot","Mishnah_Niddah","Mishnah_Makhshirin","Mishnah_Zavim","Mishnah_Tevul_Yom","Mishnah_Yadayim","Mishnah_Oktzin","Berakhot","Shabbat","Eruvin","Pesachim","Rosh_Hashanah","Yoma","Sukkah","Beitzah","Taanit","Megillah","Moed_Katan","Chagigah","Yevamot","Ketubot","Nedarim","Nazir","Sotah","Gittin","Kiddushin","Bava_Kamma","Bava_Metzia","Bava_Batra","Sanhedrin","Makkot","Shevuot","Avodah_Zarah","Horayot","Zevachim","Menachot","Chullin","Bekhorot","Arakhin","Temurah","Keritot","Meilah","Tamid","Niddah","tanakhDE","mishnahDE","talmudDE","tanakhDM","mishnahDM","talmudDM","tanakhBG","tanakhCG","mishnahBG","mishnahCG","talmudBG","dictFinder","easy","medium","corpusGroups","bookGroups","MatchingRound","labelTextNames","selectRandomTexts","level","updateScoreHandler","correctAnswer","textInfos","answeredCorrectly","correctAnswerShow","getTextInfo","getLabels","timer","setAnswerInform","labels","textNames","singleTextInfoArray","push","Promise","all","textName","chapterNumber","chooseRandomChapter","fetch","then","json","data","removeHTML","text","chooseRandomVerse","he","vn","names","TextInfo","indexTitle","heTitle","values","textInfoArray","Label","heIndexTitle","shuffleArray","num","texts","Object","keys","textOptions","newUserTexts","correctText","splice","textDict","ceil","daf","toString","getClueDifficulty","candidateVerse","valid","candidateText","candidateArr","giveAwayList","some","w","indexOf","wordList","textCompArray","labelCompArray","nextClue","filter","key","answerInform","GameDesk","TextRow","Modal","EndGameModal","reStartGame","GameLang","Instructions","setLang","GameText","setText","GameLevel","setLevel","StartGameModal","startGame","MatchingGame","rounds","gameOver","gamePlay","status","gameLang","gameCorpus","gameLevel","gameStart","currentDisplay","Crossword","activeClueBoxes","activeClue","boxInFocus","setActiveClueBoxes","setActiveClue","setBoxInFocus","boxes","box","grid","allClues","highlightedBoxes","dimensions","Clues","across","down","cluesAcross","cluesDown","id","direction","clueData","clueID","clueText","clueNumber","number","clueBoxes","clueDir","isActive","Clue","active","handleClick","Board","isBoxFilled","find","letter","boxMatrix","boxClues","isHighlighted","row","Box","highlight","isInFocus","handleFocus","uniKeyCode","uniKeyUp","textInput","focus","event","boxesToHighlight","concat","keyCode","charCodeAt","y","parseInt","charAt","String","fromCharCode","visibleLabel","input","type","maxLength","onFocus","onKeyDown","onKeyUp","ref","xWords","HORIZONTAL","VERTICAL","MAX_PASSES","MAX_RUNTIME","CENTER_FIRST","UNSET","_self","Grid","Array","QuestionGrid","Words","QuestionList","bestFit","sErrors","SetLang","Reset","ResetComplete","GetNumberOfWordGroups","iReturn","orphaned","GetUnusedWords","unusedArray","chosenPosition","word","GetQuestionGrid","GetQuestionList","Create","height","width","arrayOfWords","time2","time1","Date","getTime","trim","Word","SortByLength","posIndex","AddWord","GenerateQuestionGrid","WordGroupsCount","AlternativeGrid","slice","counter","crossingPositions","tmpObj","d","availablePositions","SortXwordQuestions","k","lArray","sort","a","b","bReturn","newWord","callNumber","passNumber","GetPositions","newPos","choice","horWord","reverse","undefined","TestPosition","crossingPoint","CharBeforeFirstLetter","CharAfterLastLetter","AnotherWordOnThisLine","SidesHaveChars","Position","len","z","txt","pos","substr","ResetArrays","words","qGrid","qList","groupCount","CLUE_LIST","WORD_LIST","CrosswordGenerator","structure_Grid_Data","Grid_Data","labelCount","currentLabel","labelOffset","gridMatrix","xComponent","yComponent","data_to_change","dirComponent","clueList","dirKey","Clue_Data","AboutPage","Navbar","NavbarOuter","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6965e998.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerInformer\":\"AnswerInformer_AnswerInformer__7VDLQ\",\"Header\":\"AnswerInformer_Header__2FLi1\",\"Context\":\"AnswerInformer_Context__1mPaz\",\"Title\":\"AnswerInformer_Title__1tttM\",\"Hebrew\":\"AnswerInformer_Hebrew__BobzS\",\"English\":\"AnswerInformer_English__1PFCb\",\"Correct\":\"AnswerInformer_Correct__1opd-\",\"Incorrect\":\"AnswerInformer_Incorrect__9ENrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Buttons_Btn__3XVRn\",\"Answer\":\"Buttons_Answer__1EVei\",\"Big\":\"Buttons_Big__fkn6u\",\"Config\":\"Buttons_Config__3mHAv\",\"Small\":\"Buttons_Small__1hVra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Instructions\":\"StartGameModal_Instructions__1q0iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextBox\":\"TextBox_TextBox__3Hmb0\",\"Hebrew\":\"TextBox_Hebrew__1aK8i\",\"English\":\"TextBox_English__ViEpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameDesk\":\"MatchingRound_GameDesk__2iByN\",\"TextRow\":\"MatchingRound_TextRow__2BVuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__27sKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarOuter\":\"Navbar_NavbarOuter__2QxoC\"};","import React, {Component} from 'react';\r\n\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <h2>HomePage</h2>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","export const levels = {\r\n    EASY: 'easy',\r\n    MEDIUM: 'medium',\r\n    HARD: 'hard'\r\n}\r\n\r\nexport const lang = {\r\n    HEBREW: 'hebrew',\r\n    ENGLISH: 'english'\r\n}\r\n\r\nexport const corpus = {\r\n    TANAKH: 'tanakh',\r\n    MISHNAH: 'mishnah',\r\n    TALMUD: 'talmud'\r\n}","export default class Utils{\r\n\r\n    removeHTML(textArr){\r\n        return textArr.map(x => x.replace(/<\\s*a[^>]*>(.*?)<\\s*\\/\\s*a>/g,\"\").replace(/<[^>]*>/g,\"\"));\r\n\r\n    }\r\n\r\n    stripVowels(rawString) {\r\n        return rawString.replace(/[\\u0591-\\u05C7]/g,\"\")\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport classes from '../styles/TextBox.module.css';\r\nimport {lang,corpus} from './classes/enums';\r\nimport Utils from './classes/Utils';\r\n\r\nconst tanakhN = require('./dicts/tanakh_names.json')\r\nconst U = new Utils();\r\n\r\nconst TextBox = (props) => {\r\n    let finalText = {\r\n        hebrew: props.showText.textHebrew[props.showText.verseNumber],\r\n        english: props.showText.textEnglish[props.showText.verseNumber],\r\n        both: props.showText.textHebrew[props.showText.verseNumber] +\r\n            props.showText.textEnglish[props.showText.verseNumber]\r\n    }[props.lang]\r\n    //there will be flaws here differentiating between underscores and names\r\n    if (props.corpus == corpus.TANAKH) {\r\n        tanakhN[props.showText.textNameEnglish.replace(\" \", \"_\")].forEach(name => {\r\n            finalText = finalText.split(\" \").map(textWord => {\r\n                if (U.stripVowels(textWord).includes(name)) {\r\n                    return U.stripVowels(textWord).replace(name, '_'.repeat(name.length) + \" \");\r\n                }\r\n                return textWord;\r\n            }).join(\" \");\r\n        })\r\n    }\r\n\r\n\r\n    console.log(\"finaltext: \" + {finalText} )\r\n    return (\r\n        <div className={'col-12 ' + classes.TextBox + \" \" + (props.lang == lang.HEBREW ? classes.Hebrew : classes.English)}>\r\n            <p>{finalText}</p>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default TextBox;\r\n\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport default class TimeBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: this.props.time,\r\n            timerInterval: '',\r\n\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startCountDown()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps != this.props) {\r\n            if (this.props.round != prevProps.round) {\r\n                this.setState({\r\n                    count: this.props.time\r\n                })\r\n                clearInterval(this.state.timeInterval);\r\n                this.startCountDown();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    startCountDown(){\r\n\r\n        let interval = setInterval(function () {\r\n                    this.setState({count: this.state.count - 1}, ()=> {\r\n                        if(this.state.count <= 0){\r\n                            this.props.resetClue();\r\n                            clearInterval(this.state.timeInterval);\r\n                            this.startCountDown();\r\n                        }\r\n                        else if(this.state.count % 15 == 0){\r\n                            this.props.resetClue();\r\n                        }\r\n                    });\r\n\r\n        }.bind(this), 1000);\r\n\r\n        this.setState({\r\n            timeInterval: interval\r\n        })\r\n    }\r\n\r\n    // timer(){\r\n    //     this.setState({count: this.state.count + 1});\r\n    // }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='col-12'>\r\n                <h2 style={{display: 'inline-block'}}>Round: {this.props.round}  </h2>\r\n                <h2 style={{display: 'inline-block', marginLeft:'20px'}}>Time for Clue: {this.state.count}</h2>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nconst ScoreBoard = (props) => {\r\n    return(\r\n        <div style={{display: 'inline'}}>\r\n            <h2>Score: {props.score}</h2>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ScoreBoard;","import React from 'react';\r\nimport classes from '../../styles/Buttons.module.css';\r\n\r\n\r\nexport const BtnConfig = (props) => {\r\n\r\n    return (\r\n        <button className={'col-sm ' + classes.Btn + ' ' + classes.Config} onClick={() => props.setConfig(props.response)}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnBig = (props) => {\r\n\r\n    return (\r\n            <button className={classes.Btn + ' ' + classes.Big} onClick={props.onClick}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnAnswer= (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Answer} onClick={() => props.resetRoundHandler((props.label.correct ? (4 - props.clue) * 100 : 0), props.label.correct)} >\r\n                <p>{props.label.textNameHebrew}</p>\r\n                <p>{props.label.textNameEnglish}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const BtnSmall = (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Small} onClick={props.onClick} >\r\n                <p>{props.children}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport classes from '../styles/AnswerInformer.module.css';\r\nimport {corpus, lang, levels} from './classes/enums';\r\nimport {BtnSmall} from \"./assets/buttons\";\r\n\r\nexport default class AnswerInformer extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clueShown: 0\r\n        }\r\n        this.nextClueContext = this.nextClueContext.bind(this)\r\n    }\r\n\r\n    nextClueContext = () => {\r\n        this.setState({\r\n            clueShown: this.state.clueShown + 1\r\n        })\r\n    }\r\n    render() {\r\n        let colorClass = this.props.correct ? classes.Correct : classes.Incorrect;\r\n        let langClass = this.props.lang == lang.HEBREW ? classes.Hebrew : classes.English;\r\n        let answer = <p>Correct Answer: {this.props.clues[0].textNameEnglish}</p>;\r\n        let correct = <p className={colorClass}> {this.props.correct ? 'Correct!' : 'Incorrect'}</p>;\r\n        let points = <p>+{this.props.addedPoints}  </p>;\r\n\r\n        let contextBoxes = this.props.clues.map((answer, index) => {\r\n            let beforeContext = '';\r\n            let contextRange = {\r\n                hebrew: {tanakh: 3, mishnah: 1, talmud: 2},\r\n                english: {tanakh: 3, mishnah: 1, talmud: 1}\r\n            }[this.props.lang][this.props.corpus]\r\n            for (let i = this.props.clues[index].verseNumber - contextRange; i < this.props.clues[index].verseNumber; i++) {\r\n                if (i >= 0) {\r\n                    if (this.props.lang == lang.HEBREW) {\r\n                        beforeContext += this.props.clues[index].textHebrew[i] + ' ';\r\n                    } else {\r\n                        beforeContext += this.props.clues[index].textEnglish[i] + ' ';\r\n                    }\r\n                }\r\n            }\r\n            let answerText = <span\r\n                className={colorClass}>{this.props.lang == lang.HEBREW ? this.props.clues[index].textHebrew[this.props.clues[index].verseNumber] + \" \" :\r\n                this.props.clues[index].textEnglish[this.props.clues[index].verseNumber] + \" \"}</span>\r\n\r\n            let afterContext = '';\r\n            for (let i = this.props.clues[index].verseNumber + 1; i <= this.props.clues[index].verseNumber + contextRange && i < this.props.clues[index].textHebrew.length; i++) {\r\n                if (i >= 0) {\r\n                    if (this.props.lang == lang.HEBREW) {\r\n                        afterContext += this.props.clues[index].textHebrew[i] + ' ';\r\n                    } else {\r\n                        afterContext += this.props.clues[index].textEnglish[i] + ' ';\r\n                    }\r\n                }\r\n            }\r\n            let answerContext = <p>{beforeContext}{answerText}{afterContext}</p>;\r\n            return (<ContextBox\r\n                textNameHebrew={this.props.clues[index].textNameHebrew}\r\n                chapter={this.props.clues[index].chapter}\r\n                verseNumber={this.props.clues[index].verseNumber}\r\n                langClass={langClass}\r\n                answerContext={answerContext}\r\n                onClick={this.nextClueContext}\r\n            />)\r\n\r\n        })\r\n\r\n\r\n        return (\r\n            <div className={classes.AnswerInformer}>\r\n                <div className={classes.Header}>\r\n                    {correct}\r\n                    {this.props.correct ? points : answer}\r\n                    {contextBoxes[this.state.clueShown]}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst ContextBox = (props) => {\r\n    return(\r\n        <div className={classes.Context}>\r\n            <p className={classes.Title }>{props.textNameHebrew + \" \" + props.chapter + \":\" + (props.verseNumber + 1)} </p>\r\n            <p className={props.langClass}>{props.answerContext}</p>\r\n            <BtnSmall onClick={props.onClick}>Next Context</BtnSmall>\r\n        </div>\r\n    )\r\n}","export const TextChapters = {\r\n    tanakh: {\r\n        Genesis: 50,\r\n        Exodus: 40,\r\n        Leviticus: 27,\r\n        Numbers: 36,\r\n        Deuteronomy: 34,\r\n        Joshua: 24,\r\n        Judges: 21,\r\n        I_Samuel: 31,\r\n        II_Samuel: 24,\r\n        I_Kings: 22,\r\n        II_Kings: 25,\r\n        Isaiah: 66,\r\n        Jeremiah: 52,\r\n        Ezekiel: 48,\r\n        Hosea: 14,\r\n        Joel: 4,\r\n        Amos: 9,\r\n        Obadiah: 1,\r\n        Jonah: 4,\r\n        Micah: 7,\r\n        Nahum: 3,\r\n        Habakkuk: 3,\r\n        Zephaniah: 3,\r\n        Haggai: 2,\r\n        Zechariah: 14,\r\n        Malachi: 3,\r\n        Psalms: 150,\r\n        Proverbs: 31,\r\n        Job: 42,\r\n        Song_of_Songs: 8,\r\n        Ruth: 4,\r\n        Lamentations: 5,\r\n        Ecclesiastes: 12,\r\n        Esther: 10,\r\n        Daniel: 12,\r\n        Ezra: 10,\r\n        Nehemiah: 13,\r\n        I_Chronicles: 29,\r\n        II_Chronicles: 36\r\n    },\r\n    mishnah: {\r\n        Mishnah_Berakhot: 9,\r\n        Mishnah_Peah: 8,\r\n        Mishnah_Demai: 7,\r\n        Mishnah_Kilayim: 9,\r\n        Mishnah_Sheviit: 10,\r\n        Mishnah_Terumot: 11,\r\n        Mishnah_Maasrot: 5,\r\n        Mishnah_Maaser_Sheni: 5,\r\n        Mishnah_Challah: 4,\r\n        Mishnah_Orlah: 3,\r\n        Mishnah_Bikkurim: 4,\r\n        Mishnah_Shabbat: 24,\r\n        Mishnah_Eruvin: 10,\r\n        Mishnah_Pesachim: 10,\r\n        Mishnah_Shekalim: 8,\r\n        Mishnah_Yoma: 8,\r\n        Mishnah_Sukkah: 5,\r\n        Mishnah_Beitzah: 5,\r\n        Mishnah_Rosh_Hashanah: 4,\r\n        Mishnah_Taanit: 4,\r\n        Mishnah_Megillah: 4,\r\n        Mishnah_Moed_Katan: 3,\r\n        Mishnah_Chagigah: 3,\r\n        Mishnah_Yevamot: 16,\r\n        Mishnah_Ketubot: 13,\r\n        Mishnah_Nedarim: 11,\r\n        Mishnah_Nazir: 9,\r\n        Mishnah_Sotah: 9,\r\n        Mishnah_Gittin: 9,\r\n        Mishnah_Kiddushin: 4,\r\n        Mishnah_Bava_Kamma: 10,\r\n        Mishnah_Bava_Metzia: 10,\r\n        Mishnah_Bava_Batra: 10,\r\n        Mishnah_Sanhedrin: 11,\r\n        Mishnah_Makkot: 3,\r\n        Mishnah_Shevuot: 8,\r\n        Mishnah_Eduyot: 8,\r\n        Mishnah_Avodah_Zarah: 5,\r\n        Mishnah_Avot: 5,\r\n        Mishnah_Horayot: 3,\r\n        Mishnah_Zevachim: 14,\r\n        Mishnah_Menachot: 13,\r\n        Mishnah_Chullin: 12,\r\n        Mishnah_Bekhorot: 9,\r\n        Mishnah_Arakhin: 9,\r\n        Mishnah_Temurah: 7,\r\n        Mishnah_Keritot: 6,\r\n        Mishnah_Meilah: 6,\r\n        Mishnah_Tamid: 7,\r\n        Mishnah_Middot: 5,\r\n        Mishnah_Kinnim: 3,\r\n        Mishnah_Kelim: 30,\r\n        Mishnah_Oholot: 18,\r\n        Mishnah_Negaim: 14,\r\n        Mishnah_Parah: 12,\r\n        Mishnah_Tahorot: 10,\r\n        Mishnah_Mikvaot: 10,\r\n        Mishnah_Niddah: 10,\r\n        Mishnah_Makhshirin: 6,\r\n        Mishnah_Zavim: 5,\r\n        Mishnah_Tevul_Yom: 4,\r\n        Mishnah_Yadayim: 4,\r\n        Mishnah_Oktzin: 3\r\n    },\r\n    talmud: {\r\n        Berakhot: 64,\r\n        Shabbat: 157,\r\n        Eruvin: 105,\r\n        Pesachim: 121,\r\n        Rosh_Hashanah: 35,\r\n        Yoma: 88,\r\n        Sukkah: 56,\r\n        Beitzah: 40,\r\n        Taanit: 31,\r\n        Megillah: 32,\r\n        Moed_Katan: 29,\r\n        Chagigah: 27,\r\n        Yevamot: 122,\r\n        Ketubot: 112,\r\n        Nedarim: 91,\r\n        Nazir: 66,\r\n        Sotah: 49,\r\n        Gittin: 90,\r\n        Kiddushin: 82,\r\n        Bava_Kamma: 119,\r\n        Bava_Metzia: 119,\r\n        Bava_Batra: 176,\r\n        Sanhedrin: 113,\r\n        Makkot: 24,\r\n        Shevuot: 49,\r\n        Avodah_Zarah: 76,\r\n        Horayot: 14,\r\n        Zevachim: 120,\r\n        Menachot: 110,\r\n        Chullin: 142,\r\n        Bekhorot: 61,\r\n        Arakhin: 34,\r\n        Temurah: 34,\r\n        Keritot: 28,\r\n        Meilah: 22,\r\n        Tamid: 8,\r\n        Niddah: 73\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport TextBox from './TextBox';\r\nimport TimeBox from './assets/TimeBox';\r\nimport ScoreBoard from './ScoreBoard'\r\nimport AnswerInformer from './AnswerInformer';\r\nimport {BtnAnswer, BtnSmall} from \"./assets/buttons\";\r\nimport classes from '../styles/MatchingRound.module.css'\r\nimport Utils from \"./classes/Utils\";\r\nimport {TextChapters} from \"./classes/texts\";\r\nimport {levels,lang,corpus} from './classes/enums'\r\n\r\nconst tanakhDE = require('./dicts/tanakh_easy.json')\r\nconst mishnahDE = require('./dicts/mishnah_easy.json')\r\nconst talmudDE = require('./dicts/talmud_easy.json')\r\nconst tanakhDM = require('./dicts/tanakh_medium.json')\r\nconst mishnahDM = require('./dicts/mishnah_medium.json')\r\nconst talmudDM = require('./dicts/talmud_medium_stop_words.json')\r\nconst tanakhBG = require('./dicts/tanakh_book_groups.json')\r\nconst tanakhCG = require('./dicts/tanakh_corpus_groups.json')\r\nconst mishnahBG = require('./dicts/mishnah_book_groups.json')\r\nconst mishnahCG = require('./dicts/mishnah_corpus_groups.json')\r\nconst talmudBG = require('./dicts/talmud_book_groups.json')\r\nconst talmudCG = require('./dicts/talmud_corpus_groups.json')\r\n\r\n\r\nconst dictFinder = {\r\n    easy: {\r\n        tanakh: tanakhDE,\r\n        mishnah: mishnahDE,\r\n        talmud: talmudDE\r\n    },\r\n    medium: {\r\n        tanakh: tanakhDM,\r\n        mishnah: mishnahDM,\r\n        talmud: talmudDM\r\n    },\r\n    corpusGroups: {\r\n        tanakh: tanakhCG,\r\n        mishnah: mishnahCG,\r\n        talmud: talmudCG\r\n    },\r\n    bookGroups: {\r\n        tanakh: tanakhBG,\r\n        mishnah: mishnahBG,\r\n        talmud: talmudBG\r\n    }\r\n}\r\n\r\nconst U = new Utils();\r\n\r\n\r\nexport default class MatchingRound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let labelTextNames = this.selectRandomTexts(3, TextChapters[this.props.corpus],this.props.level,dictFinder['corpusGroups'][this.props.corpus],dictFinder['bookGroups'][this.props.corpus]);\r\n        this.state = {\r\n            labelTextNames: labelTextNames,\r\n            textInfos: [],\r\n            labels: [],\r\n            clue: 1,\r\n            answeredCorrectly: false,\r\n            correctAnswer: '',\r\n            addedPoints: 0,\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getTextInfo(this.state.labelTextNames);\r\n        this.getLabels(this.state.labelTextNames);\r\n    }\r\n\r\n\r\n    getTextInfo(textNames) {\r\n        let singleTextInfoArray = [];\r\n        let correctAnswer = textNames[0];\r\n        for (let i = 0; i < textNames.length; i++) {\r\n            singleTextInfoArray.push(correctAnswer);\r\n        }\r\n        Promise.all(singleTextInfoArray.map((textName, index) => {\r\n            let chapterNumber = this.chooseRandomChapter(textName,TextChapters[this.props.corpus]);\r\n            let fetchString = 'http://www.sefaria.org/api/texts/' + textName + '.' + chapterNumber;\r\n            return fetch(fetchString)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    data['text'] = U.removeHTML(data.text);\r\n                    let [vn,names] = this.chooseRandomVerse(data.he,textName,index);\r\n                    return(new TextInfo(data.indexTitle, data.heTitle,vn,chapterNumber, data.he, data.text, names));\r\n                });\r\n        })).then(values => {\r\n            console.log(\"Text Values\");\r\n            console.log(values);\r\n            this.setState({\r\n                textInfos : values,\r\n                count: this.state.count + 3\r\n            }, ()=> console.log(\"finished changes texts\"));\r\n        })\r\n    }\r\n\r\n\r\n    getLabels(textInfoArray){\r\n        Promise.all(textInfoArray.map(textName => {\r\n            //this doesn't really need to have a network call\r\n            let fetchString = 'http://www.sefaria.org/api/texts/' + textName;\r\n            return fetch(fetchString)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    data['text'] = U.removeHTML(data.text);\r\n                    // console.log(data);\r\n                    let correct = (textName == textInfoArray[0]);\r\n                    return (new Label(data.indexTitle.replace(/Mishnah/, ''),data.heIndexTitle.replace('משנה' ,''), correct));\r\n                });\r\n        })).then(values => {\r\n            console.log(\"Label values\");\r\n            console.log(values);\r\n            U.shuffleArray(values)\r\n            this.setState({\r\n                labels : values\r\n            }, ()=> console.log(\"finished changes labels\"));\r\n        });\r\n    }\r\n\r\n    selectRandomTexts(num, textArr, level,corpusGroups,bookGroups){\r\n        let texts = Object.keys(textArr);\r\n        let textOptions = [...texts]\r\n        let newUserTexts = [];\r\n\r\n        let index = Math.floor(Math.random() * textOptions.length);\r\n        let correctText = textOptions[index];\r\n        newUserTexts.push(textOptions[index]);\r\n        textOptions.splice(index,1);\r\n        if(level == levels.HARD){\r\n            let textGroupName = bookGroups[newUserTexts[0]][Math.floor(Math.random() * bookGroups[newUserTexts[0]].length)];\r\n            textOptions = corpusGroups[textGroupName];\r\n        }\r\n\r\n        for (let i = 1; i < num; i++) {\r\n            do {\r\n                index = Math.floor(Math.random() * textOptions.length);\r\n            }while(textOptions[index] == correctText)\r\n            newUserTexts.push(textOptions[index]);\r\n            textOptions.splice(index, 1);\r\n        }\r\n        console.log(\"Pre-Selected \" + newUserTexts);\r\n        return newUserTexts;\r\n    }\r\n\r\n    resetRoundHandler = (score,correct) =>{\r\n        this.labelTextNames = this.selectRandomTexts(3, TextChapters[this.props.corpus],this.props.level,dictFinder['corpusGroups'][this.props.corpus], dictFinder['bookGroups'][this.props.corpus] );\r\n        console.log(\"After Click \" + this.labelTextNames);\r\n        this.props.updateScoreHandler(score);\r\n        let correctAnswer = this.state.textInfos;\r\n        this.setState({\r\n            labelTextNames : this.labelTextNames,\r\n            clue: 1,\r\n            answeredCorrectly: correct,\r\n            correctAnswer: correctAnswer,\r\n            addedPoints: score\r\n        }, () => {\r\n            console.log(\"Post Click state\" + this.state.labelTextNames);\r\n            this.correctAnswerShow();\r\n            this.getTextInfo(this.state.labelTextNames);\r\n            this.getLabels(this.state.labelTextNames);\r\n        });\r\n    }\r\n\r\n    correctAnswerShow = () =>{\r\n\r\n        let timer = setInterval( () => {\r\n            clearInterval(timer);\r\n            this.props.setAnswerInform(false);\r\n        },3000)\r\n\r\n    }\r\n\r\n    resetClue = () =>{\r\n        if(this.state.clue == 3){\r\n            this.resetRoundHandler(0, false);\r\n        }\r\n        else{\r\n            this.setState({\r\n                clue : this.state.clue + 1\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    chooseRandomChapter(textName, textDict){\r\n        //lookup chapter numbers for a given book\r\n         let num = Math.ceil(Math.random() * textDict[textName]);\r\n\r\n         //special logic for talmud, includes amudim\r\n         if(Object.keys(textDict)[0] == 'Berakhot' && textDict[Object.keys(textDict)[0]] == 64){\r\n             //tamid starts at daf 26 and end at 33\r\n             if(textName == \"Tamid\"){\r\n                 num = (num % 6) +26;\r\n                 let daf = Math.round(Math.random())\r\n                 return num.toString() + (daf == 0 ? 'a':'b');\r\n             }\r\n             //accounting for th lack of daf aleph\r\n             if(num == 1){\r\n                 num = 2;\r\n                 let daf = Math.round(Math.random())\r\n                 return num.toString() + (daf == 0 ? 'a':'b');\r\n             }\r\n             num = num - 1;\r\n             let daf = Math.round(Math.random());\r\n             return num.toString() + (daf == 0 ? 'a':'b');\r\n         }\r\n        return num;\r\n    }\r\n\r\n    chooseRandomVerse(textArr,textName,index){\r\n        //identify clue difficulty, clue number and difficulty\r\n        //need to also not reuse verse -- keep track of in game\r\n        let [level,names] = this.getClueDifficulty(index);\r\n        let candidateVerse = Math.floor(Math.random() * textArr.length);\r\n        let valid = false\r\n        let candidateText =  textArr[candidateVerse];\r\n        //check to see if this verse is valid, if not look through other verses in chapter\r\n        for(let i = candidateVerse; i < textArr.length && valid == false; i++){\r\n            candidateText = textArr[i % textArr.length];\r\n            let candidateArr = U.stripVowels(candidateText).split(' ');\r\n            //see if verse is appropriately hard based on give-away lists\r\n            if(level == levels.HARD){\r\n                let giveAwayList = dictFinder[levels.EASY][this.props.corpus][textName];\r\n                if(!candidateArr.some(w=> giveAwayList.indexOf(w) >= 0)){\r\n                    valid = true;\r\n                    console.log(\"Found a match!\")\r\n                    candidateVerse = i % textArr.length;\r\n                }\r\n            }\r\n            else{\r\n                //ensure that a word from the easy list or medium list is in the verse\r\n                let wordList = [];\r\n                if(level == levels.EASY){\r\n                    wordList = dictFinder[level][this.props.corpus][textName];\r\n                }\r\n                else if(level == levels.MEDIUM){\r\n                    wordList = dictFinder[level][this.props.corpus][textName]['unigrams'];\r\n                }\r\n\r\n                console.log(wordList)\r\n                console.log(U.stripVowels(candidateText))\r\n                if(candidateArr.some(w=> wordList.indexOf(w) >= 0)){\r\n                    valid = true;\r\n                    console.log(\"Found a match!\")\r\n                    candidateVerse = i % textArr.length;\r\n                }\r\n            }\r\n\r\n        }\r\n        return [candidateVerse,names];\r\n    }\r\n\r\n    getClueDifficulty(index){\r\n        switch(this.props.level) {\r\n            case levels.EASY:\r\n                return [levels.EASY,true];\r\n                break;\r\n            case levels.MEDIUM:\r\n            case levels.HARD:\r\n                if(index == 0){\r\n                    return [levels.HARD,false];\r\n                }\r\n                else if(index == 1){\r\n                    return [levels.MEDIUM,false];\r\n                }\r\n                else{\r\n                    return [levels.EASY,false];\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\nrender(){\r\n        //Generate textboxes and labels\r\n        let textCompArray = [];\r\n        let labelCompArray = [];\r\n        let nextClue = '';\r\n        if(this.state.textInfos.length > 0) {\r\n            textCompArray = this.state.textInfos.filter((text,i) => {\r\n                if (i <= (this.state.clue - 1)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }).map((text, i) => {\r\n            return (<TextBox key={i + (this.state.textInfos.length * this.props.round)}\r\n                             lang={this.props.lang} showText={text}/>)});\r\n\r\n            labelCompArray = this.state.labels.map((label, i) => {\r\n                return(<BtnAnswer key={i + (this.state.textInfos.length * this.props.round)}\r\n                                  label={label}\r\n                                  clue={this.state.clue}\r\n                                  lang={this.props.lang}\r\n                                  corpus={this.props.corpus}\r\n                                  resetRoundHandler={this.resetRoundHandler}/>)});\r\n            if(this.state.clue >= 1 && this.state.clue < 3){\r\n                nextClue =<BtnSmall onClick={this.resetClue}>Next Clue</BtnSmall>\r\n            }\r\n        }\r\n        let answerInform = '';\r\n        if(this.props.answerInform){\r\n            answerInform = <AnswerInformer correct={this.state.answeredCorrectly} clues={this.state.correctAnswer} addedPoints={this.state.addedPoints} lang={this.props.lang} corpus={this.props.corpus}/>\r\n        }\r\n\r\n    return (\r\n        <div className={'container ' + classes.GameDesk}>\r\n            <h2>Match the Verse to the Correct Text</h2>\r\n                <div className={classes.TextRow}>\r\n                    <div className={'row '}>\r\n                        {this.props.answerInform ? answerInform : textCompArray}\r\n                        {!this.props.answerInform && nextClue}\r\n                </div>\r\n                </div>\r\n\r\n            <div className='row'>\r\n                {this.props.answerInform ? <p></p> : labelCompArray}\r\n            </div>\r\n            <ScoreBoard score={this.props.score}/>\r\n            {this.props.answerInform ?\r\n                <p></p> : <TimeBox round={this.props.round}\r\n                                   style={{display: 'inline'}}\r\n                                   resetRoundHandler={this.resetRoundHandler}\r\n                                   resetClue={this.resetClue}\r\n                                   time={45}\r\n                                   interval={15}/>}\r\n\r\n        </div>\r\n    )};\r\n}\r\n\r\nclass TextInfo {\r\n    constructor(textNameEnglish,textNameHebrew,verseNumber,chapter,textHebrew,textEnglish,names){\r\n        this.textNameEnglish = textNameEnglish;\r\n        this.textNameHebrew = textNameHebrew;\r\n        this.verseNumber = verseNumber;\r\n        this.chapter = chapter;\r\n        this.textHebrew = textHebrew;\r\n        this.textEnglish = textEnglish;\r\n        this.names = names;\r\n    }\r\n}\r\n\r\nclass Label{\r\n    constructor(textNameEnglish, textNameHebrew, correct){\r\n        this.textNameEnglish = textNameEnglish;\r\n        this.textNameHebrew = textNameHebrew;\r\n        this.correct = correct;\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from '../../styles/Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={classes.Modal}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from './assets/Modal';\r\nimport {BtnBig} from \"./assets/buttons\";\r\n\r\nconst EndGameModal = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Final Score:</h2>\r\n            <h2>{props.score}</h2>\r\n            <p>Thanks for Playing!</p>\r\n            <BtnBig onClick={props.reStartGame}>Play again</BtnBig>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EndGameModal;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfig} from \"./assets/buttons\";\r\nimport {lang} from './classes/enums';\r\n\r\nconst GameLang = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>Please choose a language for the verses</p>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <BtnConfig setConfig={() => props.setLang(lang.HEBREW)}>Hebrew</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setLang(lang.ENGLISH)}>English</BtnConfig>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameLang;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfig} from \"./assets/buttons\";\r\nimport {corpus} from './classes/enums';\r\n\r\nconst GameText = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>Please choose a text</p>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <BtnConfig setConfig={() => props.setText(corpus.TANAKH)}>Tanakh</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setText(corpus.MISHNAH)}>Mishnah</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setText(corpus.TALMUD)}>Talmud</BtnConfig>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameText;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfig} from './assets/buttons';\r\nimport {levels} from './classes/enums';\r\n\r\n\r\nconst GameLevel = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h1>Game: שלושה מי יודע</h1>\r\n            <p className={classes.Instructions}>Please choose a difficulty level</p>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <BtnConfig setConfig={() => props.setLevel(levels.EASY)}>Easy</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setLevel(levels.MEDIUM)}>Medium</BtnConfig>\r\n                    <BtnConfig setConfig={() => props.setLevel(levels.HARD)}>Hard</BtnConfig>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameLevel;","import React from 'react';\r\nimport classes from '../styles/StartGameModal.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnBig} from \"./assets/buttons\";\r\n\r\nconst StartGameModal = (props) => {\r\n\r\n    return (\r\n        <Modal>\r\n            <h2>Game: שלושה מי יודע</h2>\r\n            <p className={classes.Instructions}>You will be presented with 3 verses from a book in the Hebrew Bible. They will appear on the screen gradually.\r\n            the fewer hints you are given before you guess the more a correct answer is worth. </p>\r\n            <p>!בהצלחה</p>\r\n            <BtnBig onClick={props.startGame}>Start</BtnBig>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default StartGameModal;","import React, {Component} from 'react';\r\nimport MatchingRound from './MatchingRound';\r\nimport EndGameModal from './EndGameModal';\r\nimport GameLang from './GameLang';\r\nimport GameText from './GameText';\r\nimport GameLevel from './GameLevel';\r\nimport StartGameModal from './StartGameModal';\r\nimport {levels,lang,corpus} from './classes/enums';\r\n\r\n\r\n\r\n\r\nexport default class MatchingGame extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lang: lang.ENGLISH,\r\n            corpus: corpus.TANAKH,\r\n            score: 0,\r\n            round: 1,\r\n            gamePlay: false,\r\n            gameOver: false,\r\n            gameStart: false,\r\n            answerInform: false,\r\n            gameLang: true,\r\n            gameCorpus: false,\r\n            rounds: 10,\r\n            level: levels.MEDIUM\r\n        }\r\n        this.updateScoreHandler = this.updateScoreHandler.bind(this);\r\n        this.setAnswerInform = this.setAnswerInform.bind(this);\r\n        this.startGame = this.startGame.bind(this);\r\n        this.setLang = this.setLang.bind(this);\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    updateScoreHandler = (score) => {\r\n        if(this.state.round == this.state.rounds){\r\n            this.setState( {\r\n                score: this.state.score + score,\r\n                gameOver: true,\r\n                gamePlay: false,\r\n                answerInform:true\r\n            })\r\n        }\r\n        else{\r\n            this.setState( {\r\n                score: this.state.score + score,\r\n                round: this.state.round + 1,\r\n                answerInform:true\r\n            })\r\n        }\r\n    }\r\n\r\n    startGame = () => {\r\n        this.setState({\r\n            gamePlay: true,\r\n            score: 0,\r\n            round: 1,\r\n            gameOver: false,\r\n        })\r\n    }\r\n\r\n    setAnswerInform = (status) => {\r\n        //this is dump fix it\r\n        this.setState({\r\n            answerInform: status\r\n        })\r\n    }\r\n\r\n    setLang = (lang) => {\r\n        this.setState({\r\n            lang: lang,\r\n            gameLang: false,\r\n            gameCorpus: true,\r\n\r\n        })\r\n    }\r\n    //reset texts, will need to reset clock\r\n    setText = (corpus) => {\r\n        this.setState({\r\n            corpus: corpus,\r\n            gameCorpus: false,\r\n            gameLevel: true\r\n        })\r\n    }\r\n\r\n    setLevel = (level) => {\r\n        this.setState({\r\n            level: level,\r\n            gameLevel: false,\r\n            gameStart: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let currentDisplay;\r\n        if(this.state.gameOver && !(this.state.answerInform)){\r\n            currentDisplay = <EndGameModal reStartGame={this.startGame} score={this.state.score}/>;\r\n\r\n        }\r\n        else if(this.state.gamePlay || this.state.answerInform){\r\n            currentDisplay = <MatchingRound updateScoreHandler={this.updateScoreHandler}\r\n                                            setAnswerInform={this.setAnswerInform}\r\n                                            round={this.state.round}\r\n                                            score={this.state.score}\r\n                                            lang={this.state.lang}\r\n                                            corpus={this.state.corpus}\r\n                                            level={this.state.level}\r\n                                            answerInform={this.state.answerInform}/>;\r\n\r\n        }\r\n        else if(this.state.gameStart){\r\n            currentDisplay = <StartGameModal startGame={this.startGame}></StartGameModal>;\r\n        }\r\n        else if(this.state.gameLang){\r\n            currentDisplay = <GameLang setLang={this.setLang}/>;\r\n        }\r\n        else if(this.state.gameCorpus){\r\n            currentDisplay = <GameText setText={this.setText}/>;\r\n        }\r\n        else if(this.state.gameLevel){\r\n            currentDisplay = <GameLevel setLevel={this.setLevel}/>;\r\n        }\r\n        return (\r\n            <div>\r\n                {currentDisplay}\r\n            </div>\r\n        )\r\n    }\r\n}","//Approach 1, an array of cells\r\nimport React, {Component} from 'react';\r\nimport '../styles/Crossword.scss';\r\n\r\nexport default class Crossword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeClueBoxes: '',\r\n            activeClue: '',\r\n            boxInFocus: ''\r\n        };\r\n\r\n        this.setActiveClueBoxes = this.setActiveClueBoxes.bind(this);\r\n        this.setActiveClue = this.setActiveClue.bind(this);\r\n        this.setBoxInFocus = this.setBoxInFocus.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.clues !== this.props.clues){\r\n            let key = Object.keys(this.props.clues)[1];\r\n            this.setState({\r\n                activeClueBoxes: this.props.clues[key].boxes,\r\n                activeClue: [key],\r\n                boxInFocus: this.props.clues[key].boxes[0]\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setActiveClueBoxes(boxes) {\r\n        this.setState({\r\n            activeClueBoxes: boxes\r\n        });\r\n    }\r\n\r\n    setActiveClue(clue) {\r\n        this.setState({\r\n            activeClue: clue\r\n        });\r\n    }\r\n\r\n    setBoxInFocus(box) {\r\n        this.setState({\r\n            boxInFocus: box\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"crossword\">\r\n        <Clues clues={ this.props.clues } setActiveClueBoxes={ this.setActiveClueBoxes } activeClue={ this.state.activeClue } setActiveClue={ this.setActiveClue } setBoxInFocus={ this.setBoxInFocus } />\r\n        <Board grid={ this.props.grid } allClues={ this.props.clues } clues={ this.props.clues } setActiveClueBoxes={ this.setActiveClueBoxes } highlightedBoxes={ this.state.activeClueBoxes } setActiveClue = { this.setActiveClue } activeClueBoxes={this.state.activeClueBoxes} setBoxInFocus={ this.setBoxInFocus } boxInFocus={ this.state.boxInFocus } dimensions={this.props.dimensions}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Clues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            across: [],\r\n            down: []\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props){\r\n            const cluesAcross = [];\r\n            const cluesDown = [];\r\n           // console.log(\"printing clueS: \")\r\n            for (const key in this.props.clues) {\r\n                const clue = this.props.clues[key];\r\n               // console.log(\"printing clue \" + key)\r\n                clue.id = key;\r\n                if (clue.direction === 'across') {\r\n                    cluesAcross.push(clue);\r\n                }\r\n                else {\r\n                    cluesDown.push(clue);\r\n                }\r\n            }\r\n        this.setState({\r\n            across : cluesAcross,\r\n            down : cluesDown\r\n        })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clue-lists\">\r\n                <div className=\"clue-list-wrapper\">\r\n                    <h2>Across</h2>\r\n                    <ol className=\"clue-list\">\r\n                        { this.state.across.map((clueData) => <Clue key={ clueData.id } clueID={ clueData.id } clueText={ clueData.clue } clueNumber={ clueData.number } clueBoxes={ clueData.boxes } clueDir={\"across\"} setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } isActive={ this.props.activeClue.indexOf(clueData.id) > -1 } setBoxInFocus={ this.props.setBoxInFocus }/>) }\r\n                    </ol>\r\n                </div>\r\n                <div className=\"clue-list-wrapper\">\r\n                    <h2>Down</h2>\r\n                    <ol className=\"clue-list\">\r\n                        { this.state.down.map((clueData) => <Clue key={ clueData.id } clueID={ clueData.id } clueText={ clueData.clue } clueNumber={ clueData.number } clueBoxes={ clueData.boxes } clueDir={\"down\"} setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } isActive={ this.props.activeClue.indexOf(clueData.id) > -1 } setBoxInFocus={ this.props.setBoxInFocus }/>)\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Clue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: props.isActive\r\n        };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps !== this.props){\r\n            this.setState({\r\n                active: this.props.isActive\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        const activeClue = [];\r\n        activeClue.push(this.props.clueID);\r\n        this.props.setActiveClueBoxes(this.props.clueBoxes);\r\n        this.props.setActiveClue(activeClue);\r\n        if(this.props.clueDir == \"down\"){\r\n            this.props.setBoxInFocus(this.props.clueBoxes[0]);\r\n        }\r\n        else{\r\n            this.props.setBoxInFocus(this.props.clueBoxes[this.props.clueBoxes.length - 1]);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className={`clue ${ this.state.active ? 'active' : ''}`}>\r\n                <button className=\"clue-button\" onClick={ this.handleClick }>\r\n                    <span className=\"clue-number\">{ this.props.clueNumber }.</span>\r\n                    <span className=\"clue-text\">{ this.props.clueText }</span>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boxMatrix: [],\r\n            boxes: []\r\n        }\r\n        this.isBoxFilled = this.isBoxFilled.bind(this)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props){\r\n            let boxes = this.props.grid.map((box) => {\r\n                const { id, letter, clues, label } = box;\r\n                return <Box key={ id } id={ id } letter={ letter } boxMatrix={this.state.boxMatrix} boxClues = { clues } label={ label } allClues={ this.props.allClues } isHighlighted={ this.props.highlightedBoxes.indexOf(id) > -1 } setActiveClueBoxes={ this.props.setActiveClueBoxes } setActiveClue={ this.props.setActiveClue } activeClueBoxes={this.props.activeClueBoxes} setBoxInFocus={ this.props.setBoxInFocus } boxInFocus={this.props.boxInFocus}  dimensions={this.props.dimensions} isBoxFilled={this.isBoxFilled}/>\r\n            });\r\n            let boxMatrix = [];\r\n            for(let i = 0; i < this.props.dimensions[1];i++){\r\n                let row = [];\r\n                for(let j = 0; j < this.props.dimensions[0];j++){\r\n                    row.push(boxes[(i * this.props.dimensions[1]) + j]);\r\n                }\r\n                boxMatrix.push(row);\r\n            }\r\n            this.setState({\r\n                boxMatrix: boxMatrix,\r\n                boxes: boxes\r\n            })\r\n        }\r\n    }\r\n\r\n    isBoxFilled =(id) =>{\r\n            return !(this.props.grid.find(x => x.id == id).letter == null);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"crossword-board\">\r\n                {this.state.boxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Box extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            highlight: props.isHighlighted,\r\n            isInFocus: (props.boxInFocus == this.props.id)\r\n        };\r\n\r\n        this.handleFocus = this.handleFocus.bind(this);\r\n        this.uniKeyCode = this.uniKeyCode.bind(this);\r\n        this.uniKeyUp = this.uniKeyUp.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps != this.props) {\r\n            //clue clicking instigated the focus\r\n            if ((this.props.boxInFocus == this.props.id)) {\r\n                this.textInput.focus();\r\n            }\r\n            this.setState({\r\n                highlight: this.props.isHighlighted,\r\n                isInFocus: this.props.isInFocus\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleFocus(event) {\r\n        //if the focus happened as a result of a click only and not propigation\r\n        if(!(this.props.activeClueBoxes.includes(this.props.id))){\r\n            this.props.setActiveClue(this.props.boxClues);\r\n\r\n            let boxesToHighlight = [];\r\n            for (const clue of this.props.boxClues) {\r\n                boxesToHighlight = boxesToHighlight.concat(this.props.allClues[clue].boxes);\r\n            }\r\n\r\n            this.props.setActiveClueBoxes(boxesToHighlight);\r\n            this.props.setBoxInFocus(this.props.id);\r\n        }\r\n    }\r\n\r\n    uniKeyCode(event) {\r\n        let key = event.keyCode;\r\n        let x = this.props.id.charCodeAt(0) - 65;\r\n        let y = parseInt(this.props.id.charAt(1));\r\n        if(key == 37){\r\n            if(x > 0){\r\n                x -= 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if(key == 38){\r\n            if(y > 1){\r\n                y -= 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n        else if(key == 39){\r\n            if(x < this.props.dimensions[0] - 1){\r\n                x += 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n        else if(key == 40){\r\n\r\n            if(y <= this.props.dimensions[1]){\r\n                y += 1;\r\n                let id = String.fromCharCode(x+ 65) + y;\r\n                if(this.props.isBoxFilled(id)){\r\n                    this.props.setBoxInFocus(id);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    uniKeyUp(event) {\r\n        let key = event.keyCode;\r\n        let x = this.props.id.charCodeAt(0) - 65;\r\n        let y = parseInt(this.props.id.charAt(1));\r\n        if (key >= 65 && key <= 90){\r\n                if(this.props.boxClues[0].charAt(0) == 'A'){\r\n                    if(x > 0){\r\n                        x -= 1;\r\n                        let id = String.fromCharCode(x+ 65) + y;\r\n                        if(this.props.isBoxFilled(id)){\r\n                            this.props.setBoxInFocus(id);\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(y < this.props.dimensions[1]  - 1){\r\n                        y += 1;\r\n                        let id = String.fromCharCode(x+ 65) + y;\r\n                        if(this.props.isBoxFilled(id)){\r\n                            this.props.setBoxInFocus(id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    render() {\r\n        let visibleLabel;\r\n        let input;\r\n\r\n        if (this.props.label) {\r\n            visibleLabel = <span className=\"box-label\">{this.props.label}</span>\r\n        }\r\n\r\n        if (this.props.letter) {\r\n            input = <input type=\"text\" maxLength=\"1\" className={ `box-input ${this.state.highlight ? 'highlight' : ''}` } onFocus={ this.handleFocus } onKeyDown={this.uniKeyCode} onKeyUp={this.uniKeyUp} ref={(input) => { this.textInput = input }} />\r\n        }\r\n\r\n        return (\r\n            <div className={ `box ${!this.props.letter ? ' blank' : ''}` }>\r\n                { visibleLabel }\r\n                { input }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst GRID_DATA = [\r\n//   Row A\r\n    {\r\n        id: 'A1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A2',\r\n        letter: 'L',\r\n        clues: ['Ac1'],\r\n        label: 1\r\n    },\r\n    {\r\n        id: 'A3',\r\n        letter: 'I',\r\n        clues: ['Ac1', 'Dn2'],\r\n        label: 2\r\n    },\r\n    {\r\n        id: 'A4',\r\n        letter: 'F',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A5',\r\n        letter: 'E',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A6',\r\n        letter: 'C',\r\n        clues: ['Ac1', 'Dn3'],\r\n        label: 3\r\n    },\r\n    {\r\n        id: 'A7',\r\n        letter: 'Y',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A8',\r\n        letter: 'C',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A9',\r\n        letter: 'L',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A10',\r\n        letter: 'E',\r\n        clues: ['Ac1'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'A11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row B\r\n    {\r\n        id: 'B1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B3',\r\n        letter: 'M',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B6',\r\n        letter: 'O',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'B11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row C\r\n    {\r\n        id: 'C1',\r\n        letter: 'C',\r\n        clues: ['Ac4', 'Dn4'],\r\n        label: 4\r\n    },\r\n    {\r\n        id: 'C2',\r\n        letter: 'O',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C3',\r\n        letter: 'M',\r\n        clues: ['Ac4', 'Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C4',\r\n        letter: 'P',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C5',\r\n        letter: 'O',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C6',\r\n        letter: 'N',\r\n        clues: ['Ac4', 'Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C7',\r\n        letter: 'E',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C8',\r\n        letter: 'N',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C9',\r\n        letter: 'T',\r\n        clues: ['Ac4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'C10',\r\n        letter: 'S',\r\n        clues: ['Ac4', 'Dn5'],\r\n        label: 5\r\n    },\r\n    {\r\n        id: 'C11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row D\r\n    {\r\n        id: 'D1',\r\n        letter: 'U',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D3',\r\n        letter: 'U',\r\n        clues: ['Dn2']\r\n    },\r\n    {\r\n        id: 'D4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D6',\r\n        letter: 'S',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D10',\r\n        letter: 'U',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'D11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row E\r\n    {\r\n        id: 'E1',\r\n        letter: 'R',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E3',\r\n        letter: 'T',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E6',\r\n        letter: 'T',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E10',\r\n        letter: 'P',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'E11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row F\r\n    {\r\n        id: 'F1',\r\n        letter: 'L',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F3',\r\n        letter: 'A',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F6',\r\n        letter: 'R',\r\n        clues: ['Dn3', 'Ac6'],\r\n        label: 6\r\n    },\r\n    {\r\n        id: 'F7',\r\n        letter: 'E',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F8',\r\n        letter: 'N',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F9',\r\n        letter: 'D',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F10',\r\n        letter: 'E',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'F11',\r\n        letter: 'R',\r\n        clues: ['Ac6'],\r\n        label: null\r\n    },\r\n//   Row G\r\n    {\r\n        id: 'G1',\r\n        letter: 'Y',\r\n        clues: ['Dn4'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G3',\r\n        letter: 'B',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G6',\r\n        letter: 'U',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G9',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G10',\r\n        letter: 'R',\r\n        clues: ['Dn5'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'G11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n//   Row H\r\n    {\r\n        id: 'H1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H3',\r\n        letter: 'L',\r\n        clues: ['Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H6',\r\n        letter: 'C',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H9',\r\n        letter: 'K',\r\n        clues: ['Dn7'],\r\n        label: 7\r\n    },\r\n    {\r\n        id: 'H10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'H11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row I\r\n    {\r\n        id: 'I1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I2',\r\n        letter: 'S',\r\n        clues: ['Ac8'],\r\n        label: 8\r\n    },\r\n    {\r\n        id: 'I3',\r\n        letter: 'E',\r\n        clues: ['Ac8', 'Dn2'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I4',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I5',\r\n        letter: 'S',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I6',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I7',\r\n        letter: 'A',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I8',\r\n        letter: 'T',\r\n        clues: ['Ac8'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I9',\r\n        letter: 'E',\r\n        clues: ['Ac8', 'Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'I11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row J\r\n    {\r\n        id: 'J1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J3',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J5',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J6',\r\n        letter: 'O',\r\n        clues: ['Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J7',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J8',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J9',\r\n        letter: 'Y',\r\n        clues: ['Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'J11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n// Row K\r\n    {\r\n        id: 'K1',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K2',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K3',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K4',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K5',\r\n        letter: 'P',\r\n        clues: ['Ac9'],\r\n        label: 9\r\n    },\r\n    {\r\n        id: 'K6',\r\n        letter: 'R',\r\n        clues: ['Ac9', 'Dn3'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K7',\r\n        letter: 'O',\r\n        clues: ['Ac9'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K8',\r\n        letter: 'P',\r\n        clues: ['Ac9'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K9',\r\n        letter: 'S',\r\n        clues: ['Ac9', 'Dn7'],\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K10',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n    {\r\n        id: 'K11',\r\n        letter: null,\r\n        clues: null,\r\n        label: null\r\n    },\r\n];\r\n\r\n\r\n\r\nconst CLUE_DATA = {\r\n    'Ac1': {\r\n        clue: 'You can call these types of methods when components will be or have been mounted, updated, or unmounted',\r\n        answer: 'lifecycle',\r\n        direction: 'across',\r\n        number: 1,\r\n        boxes: ['A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10']\r\n    },\r\n    'Dn2': {\r\n        clue: 'The unchanging nature of 9 Across',\r\n        answer: 'immutable',\r\n        direction: 'down',\r\n        number: 2,\r\n        boxes: ['A3', 'B3', 'C3', 'D3', 'E3', 'F3', 'G3', 'H3', 'I3']\r\n    },\r\n    'Dn3': {\r\n        clue: 'The method in which you assign a component\\'s initial state',\r\n        answer: 'constructor',\r\n        direction: 'down',\r\n        number: 3,\r\n        boxes: ['A6', 'B6', 'C6', 'D6', 'E6', 'F6', 'G6', 'H6', 'I6', 'J6', 'K6']\r\n    },\r\n    'Ac4': {\r\n        clue: 'Independent, reusable pieces that make up your app',\r\n        answer: 'components',\r\n        direction: 'across',\r\n        number: 4,\r\n        boxes: ['C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10']\r\n    },\r\n    'Dn4': {\r\n        clue: 'The type of braces you use to embed JavaScript expressions in JSX',\r\n        answer: 'curly',\r\n        direction: 'down',\r\n        number: 4,\r\n        boxes: ['C1', 'D1', 'E1', 'F1', 'G1']\r\n    },\r\n    'Dn5': {\r\n        clue: 'A method that runs the base constructor class',\r\n        answer: 'super',\r\n        direction: 'down',\r\n        number: 5,\r\n        boxes: ['C10', 'D10', 'E10', 'F10', 'G10']\r\n    },\r\n    'Ac6': {\r\n        clue: 'A method to create and insert a component in the DOM',\r\n        answer: 'render',\r\n        direction: 'across',\r\n        number: 6,\r\n        boxes: ['F6', 'F7', 'F8', 'F9', 'F10', 'F11']\r\n    },\r\n    'Dn7': {\r\n        clue: 'A unique identifier for list items',\r\n        answer: 'keys',\r\n        direction: 'down',\r\n        number: 7,\r\n        boxes: ['H9', 'I9', 'J9', 'K9']\r\n    },\r\n    'Ac8': {\r\n        clue: 'The only method by which you can update a component\\'s state',\r\n        answer: 'setstate',\r\n        direction: 'across',\r\n        number: 8,\r\n        boxes: ['I2', 'I3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9']\r\n    },\r\n    'Ac9': {\r\n        clue: 'A read-only object that contains a component\\'s attributes passed down to it from its parent',\r\n        answer: 'props',\r\n        direction: 'across',\r\n        number: 9,\r\n        boxes: ['K5', 'K6', 'K7', 'K8', 'K9']\r\n    }\r\n};\r\n","export const xWords = {\r\n    /* CLASS CONSTANTS */\r\n    HORIZONTAL: 1,\t\t// INTENDED DIRECTION\r\n    VERTICAL: 2,\t\t// INTENDED DIRECTION\r\n\r\n    MAX_PASSES: 3,\t\t// MAXIMUM NUMBER OF ATTEMPTS TO PLACE A WORD\r\n    MAX_RUNTIME: 5000, \t// THE MAXIMUM RUN TIME IN MILLISECONDS\r\n\r\n    CENTER_FIRST: false,// PLACE THE FIRST WORD IN THE GRID CENTER\r\n    UNSET: -1,\t\t\t// CONSTANT FOR UNASSIGNED INDEXES\r\n\r\n\r\n    /* CLASS PROPERTIES */\r\n    _self:this,\r\n    Grid:new Array(),\t\t\t// Answer Grid\r\n    QuestionGrid:new Array(),\t// Question Grid (HOLDS NUMBERING)\r\n\r\n    Words:new Array(),\t\t\t// Word Objects\r\n    QuestionList:new Array(),\t// Numbered clues\r\n    bestFit:null,\t\t\t\t// Records the grid with fewest orphans\r\n    // over all iterations.\r\n    sErrors:'',\r\n    lang: 'he',\r\n\r\n    /* PUBLIC METHODS */\r\n    SetLang : function(lang){\r\n        this.lang = lang\r\n    },\r\n    // resets the grid and word list\r\n    Reset: function(){\r\n        this.Grid = new Array();\r\n        this.QuestionGrid = new Array();\r\n        this.QuestionList = new Array();\r\n    },\r\n\r\n    ResetComplete: function(){\r\n        this.Reset();\r\n\r\n        this.Words = new Array();\r\n        this.bestFit = null;\r\n        this.sErrors = '';\r\n    },\r\n\r\n    // INDICATES HOW MANY GROUPINGS OF WORDS ARE ON THE GRID\r\n    GetNumberOfWordGroups: function(){\r\n        var iReturn = 0;\r\n        for (var x = 0; x < this.Words.length; x++){\r\n            if (this.Words[x].orphaned){\r\n                iReturn++;\r\n            }\r\n        }\r\n        return iReturn;\r\n    },\r\n\r\n    GetUnusedWords: function(){\r\n        var unusedArray = new Array();\r\n        for (var x = 0; x < this.Words.length; x++){\r\n            if (this.Words[x].chosenPosition == null){\r\n                unusedArray.push(this.Words[x].word);\r\n            }\r\n        }\r\n        return unusedArray;\r\n    },\r\n\r\n    GetQuestionGrid:function(){\r\n        return this.QuestionGrid;\r\n    },\r\n\r\n    GetQuestionList:function(){\r\n        return this.QuestionList;\r\n    },\r\n\r\n\r\n    Create: function(height, width, arrayOfWords){\r\n\r\n        // RESET AND CREATE THE NEW GRID\r\n        // AND THE QUESTION GRID\r\n\r\n        var time1 = new Date().getTime();\r\n        var time2;\r\n        var lIteration = 1;\r\n\r\n        this.ResetComplete();\r\n        this.bestFit = null;\r\n\r\n        // LOAD ALL WORDS TWO OR MORE LETTERS LONG\r\n        for (var x=0; x < arrayOfWords.length; x++){\r\n            if (arrayOfWords[x].trim().length > 1){\r\n                this.Words.push(new Word(arrayOfWords[x]));\r\n            }\r\n        }\r\n\r\n\r\n        do {\r\n\r\n            this.Reset();\r\n\r\n            this.Grid = new Array(width);\r\n            this.QuestionGrid = new Array(width);\r\n\r\n            for (var i = 0; i < this.Grid.length; i++){\r\n                this.Grid[i] = new Array(height);\r\n                this.QuestionGrid[i] = new Array(height);\r\n            }\r\n\r\n            for (var i = 0; i < this.Grid.length; i++){\r\n                for (var j = 0; j < this.Grid[0].length; j++){\r\n                    this.Grid[i][j] = '';\r\n                    this.QuestionGrid[i][j] = '';\r\n                }\r\n            }\r\n\r\n            // RESET WORDS - ESSENTIAL SO THAT MULTIPLE\r\n            // ITERATIONS CAN BE RUN\r\n            for (var x=0; x < this.Words.length; x++){\r\n                this.Words[x].Reset();\r\n            }\r\n\r\n            // ORDER THE WORDS BY LENGTH\r\n            this.SortByLength(this.Words);\r\n\r\n            for (var y = 1; y <= this.MAX_PASSES; y++){\r\n                for (var x=0; x < this.Words.length; x++){\r\n                    if (((this.Words[x].orphaned)\r\n                        &&(this.Words[x].posIndex == this.UNSET))\r\n                        ||(y == 1)){\r\n                        this.Words[x].Reset();\r\n                        this.AddWord(this.Words[x],x,y);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.GenerateQuestionGrid();\r\n\r\n            if (this.bestFit != null){\r\n                if (this.bestFit.WordGroupsCount\r\n                    > this.GetNumberOfWordGroups()){\r\n                    this.bestFit = null;\r\n                    this.bestFit = new AlternativeGrid(\r\n                        this.Grid.slice(),\r\n                        this.Words.slice(),\r\n                        this.QuestionGrid.slice(),\r\n                        this.QuestionList.slice(),\r\n                        this.GetNumberOfWordGroups());\r\n                }\r\n            } else {\r\n                var x = this.GetNumberOfWordGroups();\r\n                this.bestFit = new AlternativeGrid(\r\n                    this.Grid.slice(),\r\n                    this.Words.slice(),\r\n                    this.QuestionGrid.slice(),\r\n                    this.QuestionList.slice(),\r\n                    this.GetNumberOfWordGroups());\r\n            }\r\n\r\n\r\n            lIteration++;\r\n            time2 = new Date().getTime();\r\n\r\n        } while ((time2 - time1 < this.MAX_RUNTIME)\r\n        &&(this.GetNumberOfWordGroups() > 1));\r\n\r\n\r\n\r\n\r\n        if (this.bestFit.WordGroupsCount\r\n            < this.GetNumberOfWordGroups()){\r\n            this.Reset();\r\n            this.Grid = this.bestFit.Grid;\r\n            this.Words = this.bestFit.Words;\r\n            this.QuestionGrid = this.bestFit.QuestionGrid;\r\n            this.QuestionList = this.bestFit.QuestionList;\r\n        }\r\n\r\n\r\n\r\n        return this.Grid;\r\n    },\r\n\r\n    /**********************************************************/\r\n    /* PRIVATE METHODS                                        */\r\n    /**********************************************************/\r\n    GenerateQuestionGrid: function(){\r\n        var counter = 1;\r\n\r\n        for (var i = 0; i < this.Words.length; i++){\r\n            if (this.Words[i].posIndex != this.UNSET){\r\n                if (this.Words[i].crossingPositions.length > 0){\r\n\r\n                    var tmpObj = {\r\n                        x: this.Words[i].crossingPositions[this.Words[i].posIndex].x,\r\n                        y: this.Words[i].crossingPositions[this.Words[i].posIndex].y,\r\n                        d: this.Words[i].crossingPositions[this.Words[i].posIndex].direction,\r\n                        clue: this.Words[i].clue\r\n                    };\r\n                    this.QuestionList.push(tmpObj);\r\n\r\n                } else {\r\n\r\n                    var tmpObj = {\r\n                        x: this.Words[i].availablePositions[this.Words[i].posIndex].x,\r\n                        y: this.Words[i].availablePositions[this.Words[i].posIndex].y,\r\n                        d: this.Words[i].availablePositions[this.Words[i].posIndex].direction,\r\n                        num: 0,\r\n                        clue: this.Words[i].clue\r\n                    };\r\n                    this.QuestionList.push(tmpObj);\r\n\r\n                }\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        this.QuestionList = this.SortXwordQuestions(this.QuestionList);\r\n\r\n        var counter = 0\r\n        for (var k = 0; k < this.QuestionList.length; k++){\r\n            if (this.QuestionGrid[this.QuestionList[k].x][this.QuestionList[k].y].length == 0){\r\n                counter++;\r\n                this.QuestionGrid[this.QuestionList[k].x][this.QuestionList[k].y] = counter.toString();\r\n                this.QuestionList[k].num = counter;\r\n            } else {\r\n                this.QuestionList[k].num = counter;\r\n            }\r\n        }\r\n    },\r\n\r\n    // SORT THE ARRAY LONGEST TO SHORTEST\r\n    SortXwordQuestions: function(lArray){\r\n        lArray.sort(function(a,b){\r\n            var bReturn = 1;\r\n            if (a.y < b.y) bReturn = -1;\r\n            if ((a.y == b.y)&&(a.x < b.x)) bReturn = -1;\r\n            return bReturn;\r\n        });\r\n        return lArray;\r\n    },\r\n\r\n\r\n    SortByLength: function(lArray){\r\n        lArray.sort(function(a,b){\r\n            return a.word.length < b.word.length;\r\n        });\r\n        return lArray;\r\n    },\r\n\r\n\r\n    // ADD A WORD TO THE GRID (IF POSSIBLE)\r\n    AddWord: function(newWord, callNumber, passNumber){\r\n\r\n        this.GetPositions(newWord, callNumber, passNumber);\r\n\r\n\r\n        if (newWord.crossingPositions.length +\r\n            newWord.availablePositions.length > 0){\r\n\r\n            var choice = this.UNSET;\r\n            var newPos;\r\n\r\n            // CHOOSE A CROSSING POINT POSITION IF\r\n            // THERE IS ONE - OTHERWISE RANDOMLY\r\n            // CHOOSE FROM THE AVAILABLE POSITIONS\r\n            if (newWord.crossingPositions.length > 0){\r\n                choice = Math.floor(\r\n                    (Math.random() *\r\n                        newWord.crossingPositions.length));\r\n                newPos = newWord.crossingPositions[choice];\r\n                newWord.orphaned = false;\r\n            } else if (((callNumber == 0)&&(passNumber == 1))\r\n                ||(passNumber >= this.MAX_PASSES)){\r\n                choice = Math.floor(\r\n                    (Math.random() *\r\n                        newWord.availablePositions.length));\r\n                newPos = newWord.availablePositions[choice];\r\n            }\r\n\r\n            if (choice != this.UNSET){\r\n                newWord.posIndex = choice;\r\n\r\n                if (newWord.crossingPositions.length > 0){\r\n                    newWord.chosenPosition = newWord.crossingPositions[newWord.posIndex];\r\n                } else if (newWord.availablePositions.length > 0) {\r\n                    newWord.chosenPosition = newWord.availablePositions[newWord.posIndex];\r\n                }\r\n\r\n                // LOOP THROUGH THE WORD PLACING IT IN THE GRID\r\n                let horWord = newWord.word.split('').reverse().join('');\r\n                for (var count = 0; count < newWord.word.length; count++){\r\n                    if (newPos.direction == this.HORIZONTAL){\r\n                        this.Grid[newPos.x + count][newPos.y] =\r\n                            horWord.charAt(count);\r\n                    } else if (newPos.direction == this.VERTICAL){\r\n                        this.Grid[newPos.x][newPos.y + count] =\r\n                            newWord.word.charAt(count);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    // RETURNS ALL THE AVAILABLE VALID POSITIONS FOR PLACING THE WORD\r\n    GetPositions: function(newWord, callNumber, passNumber){\r\n\r\n        if ((this.CENTER_FIRST)&&\r\n            (callNumber == 0)&&\r\n            (passNumber == 1)){\r\n\r\n            var newPos = undefined;\r\n            let word = newWord.word.split('').reverse().join('');\r\n            var x = 0;\r\n            var y = 0;\r\n            var d = this.HORIZONTAL;\r\n\r\n            if (this.Grid.length > this.Grid[0].length){\r\n                x = Math.floor(this.Grid.length/2);\r\n                y = Math.floor((this.Grid[0].length - newWord.word.length)/2);\r\n                d = this.VERTICAL\r\n            } else {\r\n                x = Math.floor((this.Grid.length - newWord.word.length)/2);\r\n                y = Math.floor(this.Grid[0].length/2);\r\n                let word = newWord.word;\r\n                d = this.HORIZONTAL\r\n            }\r\n\r\n            newPos = this.TestPosition(word,x,y,d);\r\n            if (newPos !== undefined) {\r\n                newWord.availablePositions.push(newPos);\r\n            }\r\n\r\n        } else {\r\n            for (var x = 0; x < this.Grid.length; x++){\r\n                for (var y = 0; y < this.Grid[0].length; y++){\r\n\r\n                    var newPos = undefined;\r\n\r\n                    newPos = this.TestPosition(newWord.word.split('').reverse().join(''),x,y,this.HORIZONTAL);\r\n                    if (newPos !== undefined) {\r\n                        if (newPos.crossingPoint > 0){\r\n                            newWord.crossingPositions.push(newPos);\r\n                        } else {\r\n                            newWord.availablePositions.push(newPos);\r\n                        }\r\n                    }\r\n                    newPos = this.TestPosition(newWord.word,x,y,this.VERTICAL);\r\n                    if (newPos !== undefined) {\r\n                        if (newPos.crossingPoint > 0){\r\n                            newWord.crossingPositions.push(newPos);\r\n                        } else {\r\n                            newWord.availablePositions.push(newPos);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    // TRIES A POSITION TO SEE IF IT IS ACCEPTABLE\r\n    TestPosition: function(newWord,x,y,direction){\r\n\r\n        var crossingPoint = 0;\r\n\r\n        // UNNACCEPTABLE IF THERE IS A LETTER\r\n        // IN THE SQUARE BEFORE THE PROPOSED START\r\n        if (this.CharBeforeFirstLetter(x,y,direction))\r\n            return;\r\n\r\n        // UNNACCEPTABLE IF THERE IS A LETTER\r\n        // IN THE SQUARE AFTER THE END\r\n        if (this.CharAfterLastLetter(newWord.length,x,y,direction))\r\n            return;\r\n\r\n\r\n        // DEAL WITH HORIZONTAL AND VERTICAL WORD PLACEMENT\r\n        // SEPARATELY\r\n        if (direction == this.HORIZONTAL){\r\n\r\n            // UNACCEPTABLE IF THERE IS NO SPACE IN THE GRID\r\n            if (x + newWord.length > this.Grid.length)\r\n                return;\r\n\r\n            for (var count = 0; count < newWord.length; count++){\r\n\r\n                // 4 CHECKS:\r\n                // 1 - UNACCEPTABLE IF THERE IS A CHARACTER ON\r\n                //\t\tON THE PROPOSED PATH OF THIS WORD\r\n                // 2 - UNACCEPTABLE IF THERE IS ANOTHER WORD IN THE\r\n                //\t\tSAME DIRECTION AT THIS POINT\r\n                // 3 - ACCEPTABLE IF THE CHARACTER MATCHES THE\r\n                //\t\tTHE CHARACTER IN THIS WORD - ADD\r\n                //\t\tA CROSSING POINT\r\n                // 4 - UNACCEPTABLE IF THERE ARE CHARACTERS\r\n                //\t\tEITHER SIDE OF THIE PROPOSED PATH\r\n                if ((this.Grid[x + count][y].length > 0)&&\r\n                    (this.Grid[x + count][y] !=\r\n                        newWord.charAt(count))){\r\n                    return;\r\n                } else if (this.AnotherWordOnThisLine(x + count,y,direction)){\r\n                    return;\r\n                } else if (this.Grid[x + count][y] ==\r\n                    newWord.charAt(count).toString()){\r\n                    crossingPoint++;\r\n                } else if (this.SidesHaveChars(x+count,y,direction)){\r\n                    return;\r\n                }\r\n            }\r\n\r\n        } else if (direction == this.VERTICAL){\r\n\r\n            // UNACCEPTABLE IF THERE IS NO SPACE IN THE GRID\r\n            if (y + newWord.length > this.Grid[0].length)\r\n                return;\r\n\r\n            for (var count = 0; count < newWord.length; count++){\r\n\r\n                // 4 CHECKS:\r\n                // 1 - UNACCEPTABLE IF THERE IS A CHARACTER ON\r\n                //\t\tON THE PROPOSED PATH OF THIS WORD\r\n                // 2 - UNACCEPTABLE IF THERE IS ANOTHER WORD IN THE\r\n                //\t\tSAME DIRECTION AT THIS POINT\r\n                // 3 - ACCEPTABLE IF THE CHARACTER MATCHES THE\r\n                //\t\tTHE CHARACTER IN THIS WORD - ADD\r\n                //\t\tA CROSSING POINT\r\n                // 4 - UNACCEPTABLE IF THERE ARE CHARACTERS\r\n                //\t\tEITHER SIDE OF THIE PROPOSED PATH\r\n                if ((this.Grid[x][y + count].length > 0)&&\r\n                    (this.Grid[x][y + count] !=\r\n                        newWord.charAt(count))){\r\n                    return;\r\n                } else if (this.AnotherWordOnThisLine(x,y + count,direction)){\r\n                    return;\r\n                } else if (this.Grid[x][y + count] ==\r\n                    newWord.charAt(count).toString()){\r\n                    crossingPoint++;\r\n                } else if (this.SidesHaveChars(x,y+count,direction)){\r\n                    return;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // IF NO PROBLEMS RETURN THE POSITION DETAILS\r\n        return new Position(x,y,direction,crossingPoint);\r\n    },\r\n\r\n\r\n    // CHECKS THE SQUARE AFTER THE WORD TO SEE IF VALID\r\n    CharAfterLastLetter: function(len,x,y,direction){\r\n        var bCharAfterLastLetter = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (x + len < this.Grid.length){\r\n                if (this.Grid[x + len][y].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (y + len < this.Grid[0].length){\r\n                if (this.Grid[x][y + len].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bCharAfterLastLetter;\r\n    },\r\n\r\n    // CHECKS THE SQUARE BEFORE THE WORD TO SEE IF VALID\r\n    CharBeforeFirstLetter: function(x,y,direction){\r\n        var bCharBeforeFirstLetter = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (x-1 >= 0){\r\n                if (this.Grid[x-1][y].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (y-1 >= 0){\r\n                if (this.Grid[x][y-1].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bCharBeforeFirstLetter;\r\n    },\r\n\r\n\r\n    // CHECK THE POSITION TO SEE IF IT WILL OVERWRITE ANOTHER WORD\r\n    // IN THE SAME DIRECTION\r\n    AnotherWordOnThisLine: function(x,y,direction){\r\n        for (var z = 0; z < this.Words.length; z++){\r\n            if (this.Words[z].chosenPosition != null){\r\n                if ((this.Words[z].chosenPosition.x == x)&&\r\n                    (this.Words[z].chosenPosition.y == y)&&\r\n                    (this.Words[z].chosenPosition.direction == direction)){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n\r\n    // CHECKS THE POSITIONS TO THE SIDE OF THE PROPOSED\r\n    // PATH TO SEE IF THERE ARE ANY CHARACTERS WHICH\r\n    // COULD LEAD TO CONFLICT\r\n    SidesHaveChars: function(x,y,direction){\r\n        var bHasChars = false;\r\n\r\n        if (direction == this.HORIZONTAL){\r\n            if (y-1 >= 0){\r\n                if (this.Grid[x][y-1].length > 0) return true;\r\n            }\r\n            if (y+1 < this.Grid[0].length){\r\n                if (this.Grid[x][y+1].length > 0) return true;\r\n            }\r\n        } else if (direction == this.VERTICAL){\r\n            if (x-1 >= 0){\r\n                if (this.Grid[x-1][y].length > 0) return true;\r\n            }\r\n            if (x+1 < this.Grid.length){\r\n                if (this.Grid[x+1][y].length > 0) return true;\r\n            }\r\n        }\r\n\r\n        return bHasChars;\r\n    },\r\n\r\n\r\n};\r\n\r\n\r\n/**\r\n * OBJECT: Position\r\n *\r\n * Holds the details of a valid position on the grid\r\n *\r\n * X and Y - indicate horizonal and vertical positions\r\n * on the grid.\r\n *\r\n * Direction:\r\n * \t1 indicates horizontal\r\n * \t-1 indicates vertical\r\n * CrossingPoint:\r\n * \tIndicates the number of valid crossing points with\r\n *\t\tother words already on the grid.\r\n **/\r\nfunction Position(x,y,direction,crossingPoint){\r\n    this.x = x;\r\n    this.y = y;\r\n    this.direction = direction;\r\n    this.crossingPoint = crossingPoint;\r\n}\r\n\r\n/**\r\n * OBJECT: Word\r\n *\r\n *\tHolds all the information related to an individual word\r\n *\r\n **/\r\nfunction Word(txt){\r\n    txt = txt.trim();\r\n    var pos = txt.indexOf(',');\r\n    if ((pos > 0)&&(pos < txt.length - 1)){\r\n        this.word = txt.substr(0,pos);\r\n        this.clue = txt.substr(pos + 1);\r\n    } else {\r\n        xWords.sErrors += 'Missing clue: ' + txt + '<br/>'\r\n        this.word = txt;\r\n        this.clue = txt;\r\n    }\r\n    this.crossingPositions = new Array();\r\n    this.availablePositions = new Array();\r\n    this.orphaned = true;\r\n    this.posIndex = -1;\r\n    this.chosenPosition = null;\r\n    this.ResetArrays = function(){\r\n        this.crossingPositions = new Array();\r\n        this.availablePositions = new Array();\r\n    };\r\n\r\n    this.Reset = function(){\r\n        this.crossingPositions = new Array();\r\n        this.availablePositions = new Array();\r\n        this.orphaned = true;\r\n        this.posIndex = -1;\r\n        this.chosenPosition = null;\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * OBJECT: AlternativeGrid\r\n *\r\n *\tSaves the state of a grid that has been processed.\r\n * This is to allow for evaluation of several runs of\r\n * the processor.\r\n **/\r\nfunction AlternativeGrid(grid, words, qGrid, qList, groupCount){\r\n    this.Grid = grid;\r\n    this.Words = words;\r\n    this.QuestionGrid = qGrid;\r\n    this.QuestionList = qList;\r\n    this.WordGroupsCount = groupCount;\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport Crossword from \"./Crossword\";\r\nimport {xWords} from \"./classes/xword\";\r\n\r\n// const MATRIX = [{x: 0, y: 0, d: 2, clue: \"חשונ\", num: 1},{x: 4, y: 0, d: 2, clue: \"אדר\", num: 2},{x: 0, y: 2, d: 1, clue: \"ויאמרמשה\", num: 3},\r\n// {x: 3, y: 2, d: 2, num: 4, clue: \"מילהאלי\"}, {x: 5, y: 2, d: 2, clue: \"מכבי\", num: 5},{x: 10, y: 3, d: 2, clue: \"תמוז\", num: 6},{x: 8, y: 4, d: 2, clue: \"ניסנ\", num: 7},\r\n//     {x: 5, y: 5, d: 1, clue: \"ירמיהו\", num: 8},{x: 2, y: 8, d: 1, clue: \"סיבנ\", num: 9}]\r\n// const MATRIX =[{x:0,y:0,d:2,clue:\"ויאמרמשה\",num: 1},\r\n//     {x:6,y:0,d:2,clue:\"מכבי\",num:2},{x:0,y:3,d:1,clue:\"מילהאלי\",num:1}]\r\nconst CLUE_LIST = [{word: \"חשונ\", clue: \"sad month\"},{word: \"אדר\", clue: \"happy month\"},{word: \"ויאמרמשה\", clue: \"And God Said to Moses\"},{word: \"מכבי\", clue: \"The israeli basketball club\"},{word: \"מילהאלי\", clue: \"Who is with god? Come with me\"},\r\n    {word: \"תמוז\", clue: \"fast month\"},{word: \"ניסנ\", clue: \"fרקק month\"},{word: \"ירמיהו\", clue: \"the boss\"},{word: \"סיבנ\", clue: \"it just is\"} ]\r\n\r\nconst WORD_LIST = [\"חשונ\",\"אדר\",\"ויאמרמשה\", \"מכבי\", \"מילהאלי\",\"תמוז\", \"ניסנ\", \"ירמיהו\", \"סיבנ\"]\r\n\r\n\r\nexport default class CrosswordGenerator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        xWords.Create(11,11,WORD_LIST);\r\n        this.state = {\r\n            dimensions: [11, 11],\r\n            gridMatrix: xWords.GetQuestionList(),//an array of objects x,y,dir,string,number\r\n            clueList: CLUE_LIST,\r\n            grid: [],\r\n            clues: {}\r\n        }\r\n        ;\r\n    }\r\n    componentDidMount() {\r\n        this.structure_Grid_Data();\r\n    }\r\n\r\n    structure_Grid_Data = () =>{\r\n        let grid = [];\r\n        let clues = {};\r\n        for(let i = 1; i <= this.state.dimensions[0]; i++){\r\n            for(let j = 0; j < this.state.dimensions[1]; j++){\r\n                let id = String.fromCharCode(65 + j) + i;\r\n                console.log(\"id : \" + id);\r\n                grid.push(new Grid_Data(id,null,null,null));\r\n            }\r\n        }\r\n        console.log(grid);\r\n\r\n        let labelCount = 1;\r\n        let currentLabel = 0;\r\n        let labelOffset = 0;\r\n\r\n        this.state.gridMatrix.forEach( word => {\r\n            let boxes = [];\r\n            [...word.clue].forEach( (letter, i) => {\r\n                let xComponent;\r\n                let yComponent;\r\n                if(word.d == 1){\r\n                    xComponent =String.fromCharCode(65 + word.x + i);\r\n                    yComponent = word.y + 1;\r\n                }\r\n                else{\r\n                    xComponent =String.fromCharCode(65 + word.x);\r\n                    yComponent = word.y + 1 + i;\r\n                }\r\n                let id = xComponent + yComponent;\r\n                boxes.push(id);\r\n                console.log(\"id2 : \" + id);\r\n                let data_to_change = grid.find(x => x.id === id);\r\n                data_to_change.letter = word.clue.charAt(i);\r\n                let dirComponent = (word.d == 1) ? \"Ac\":\"Dn\";\r\n                if(data_to_change.clues != null){\r\n                    data_to_change.clues.push(dirComponent + word.num);\r\n                }\r\n                else{\r\n                    data_to_change.clues = [dirComponent + word.num];\r\n                }\r\n                if(word.d == 1){\r\n                    if(i == word.clue.length - 1){\r\n                        if(data_to_change.label != null){\r\n                            currentLabel = data_to_change.label;\r\n                            labelOffset++;\r\n                        }\r\n                        else{\r\n                            data_to_change.label = labelCount - labelOffset;\r\n                            currentLabel = labelCount - labelOffset;\r\n                        }\r\n                    }\r\n\r\n                }\r\n                else{\r\n                    if(i == 0){\r\n                        if(data_to_change.label != null){\r\n                            currentLabel = data_to_change.label;\r\n                            labelOffset++;\r\n                        }\r\n                        else{\r\n                            data_to_change.label = labelCount - labelOffset;\r\n                            currentLabel = labelCount - labelOffset;\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            let clue = this.state.clueList.find(x => x.word == word.clue).clue;\r\n            let direction = (word.d == 1) ? \"across\" : \"down\";\r\n            let dirKey = ((word.d == 1) ? \"Ac\":\"Dn\") + word.num;\r\n            clues[dirKey] =  new Clue_Data(clue,word.clue,direction,currentLabel, boxes);\r\n            labelCount++;\r\n        });\r\n        this.setState({\r\n            grid: grid,\r\n            clues: clues\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <Crossword clues={this.state.clues} grid={this.state.grid} dimensions={this.state.dimensions}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Grid_Data{\r\n    constructor(id,letter,clues,label){\r\n        this.id = id;\r\n        this.letter = letter;\r\n        this.clues = clues;\r\n        this.label = label\r\n    }\r\n}\r\n\r\nclass Clue_Data{\r\n        constructor(clue,answer,direction,number,boxes){\r\n            this.clue = clue;\r\n            this.answer = answer;\r\n            this.direction = direction;\r\n            this.number = number;\r\n            this.boxes = boxes;\r\n        }\r\n}","import React, {Component} from 'react';\r\nimport Crossward from '../Crossword';\r\nimport CrosswordGenerator from \"../CrosswordGenerator\";\r\n\r\n\r\nexport default class AboutPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'col-sm '}>\r\n                <h2>About</h2>\r\n                <CrosswordGenerator/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport classes from '../../styles/Navbar.module.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class TimeBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Navbar className={classes.NavbarOuter} expand=\"lg\">\r\n                <Navbar.Brand href=\"#\">Sefarcade</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/matchingGame\" >Play</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HomePage from './components/pages/HomePage';\r\nimport MatchingGame from './components/MatchingGame';\r\nimport AboutPage from './components/pages/AboutPage'\r\nimport './App.css';\r\nimport Navbar from \"./components/assets/SiteNavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n            <Route path=\"/matchingGame\" component={MatchingGame} />\r\n            <Route path=\"/about\" component={AboutPage}/>\r\n            <Route path=\"/\" component={HomePage} />\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}